{"ast":null,"code":"import { animated as t, to as n, useTransition as e, useSpring as r } from \"@react-spring/web\";\nimport { useTheme as i, radiansToDegrees as a, positionFromAngle as o, degreesToRadians as u, midAngle as l, useMotionConfig as s, usePropertyAccessor as d, textPropsByEngine as f, getDistance as c, getAngle as g } from \"@nivo/core\";\nimport { jsx as p, jsxs as h } from \"react/jsx-runtime\";\nimport { useMemo as v, createElement as A, useCallback as x } from \"react\";\nimport { useInheritedColor as R } from \"@nivo/colors\";\nimport { line as m, arc as y } from \"d3-shape\";\nfunction M() {\n  return M = Object.assign || function (t) {\n    for (var n = 1; n < arguments.length; n++) {\n      var e = arguments[n];\n      for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n    }\n    return t;\n  }, M.apply(this, arguments);\n}\nvar k = {\n    pointerEvents: \"none\"\n  },\n  C = function (n) {\n    var e = n.label,\n      r = n.style,\n      a = i();\n    return p(t.g, {\n      transform: r.transform,\n      opacity: r.progress,\n      style: k,\n      children: p(t.text, {\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        style: M({}, a.labels.text, {\n          fill: r.textColor\n        }),\n        children: e\n      })\n    });\n  },\n  b = function (t) {\n    var n = t % (2 * Math.PI);\n    return n < 0 && (n += 2 * Math.PI), n;\n  },\n  L = function (t, n) {\n    return t.filter(function (t) {\n      return Math.abs(a(t.arc.endAngle - t.arc.startAngle)) >= n;\n    });\n  },\n  P = function (t, n, e, r, i) {\n    return [\"A\", t, t, 0, n, e, r, i].join(\" \");\n  },\n  O = [\"startAngle\", \"middleAngle\", \"endAngle\", \"innerRadius\", \"centerRadius\", \"outerRadius\", \"pushIn\", \"pushOut\"],\n  E = {\n    startAngle: {\n      enter: function (t) {\n        return M({}, t, {\n          endAngle: t.startAngle\n        });\n      },\n      update: function (t) {\n        return t;\n      },\n      leave: function (t) {\n        return M({}, t, {\n          startAngle: t.endAngle\n        });\n      }\n    },\n    middleAngle: {\n      enter: function (t) {\n        var n = t.startAngle + (t.endAngle - t.startAngle) / 2;\n        return M({}, t, {\n          startAngle: n,\n          endAngle: n\n        });\n      },\n      update: function (t) {\n        return t;\n      },\n      leave: function (t) {\n        var n = t.startAngle + (t.endAngle - t.startAngle) / 2;\n        return M({}, t, {\n          startAngle: n,\n          endAngle: n\n        });\n      }\n    },\n    endAngle: {\n      enter: function (t) {\n        return M({}, t, {\n          startAngle: t.endAngle\n        });\n      },\n      update: function (t) {\n        return t;\n      },\n      leave: function (t) {\n        return M({}, t, {\n          endAngle: t.startAngle\n        });\n      }\n    },\n    innerRadius: {\n      enter: function (t) {\n        return M({}, t, {\n          outerRadius: t.innerRadius\n        });\n      },\n      update: function (t) {\n        return t;\n      },\n      leave: function (t) {\n        return M({}, t, {\n          innerRadius: t.outerRadius\n        });\n      }\n    },\n    centerRadius: {\n      enter: function (t) {\n        var n = t.innerRadius + (t.outerRadius - t.innerRadius) / 2;\n        return M({}, t, {\n          innerRadius: n,\n          outerRadius: n\n        });\n      },\n      update: function (t) {\n        return t;\n      },\n      leave: function (t) {\n        var n = t.innerRadius + (t.outerRadius - t.innerRadius) / 2;\n        return M({}, t, {\n          innerRadius: n,\n          outerRadius: n\n        });\n      }\n    },\n    outerRadius: {\n      enter: function (t) {\n        return M({}, t, {\n          innerRadius: t.outerRadius\n        });\n      },\n      update: function (t) {\n        return t;\n      },\n      leave: function (t) {\n        return M({}, t, {\n          outerRadius: t.innerRadius\n        });\n      }\n    },\n    pushIn: {\n      enter: function (t) {\n        return M({}, t, {\n          innerRadius: t.innerRadius - t.outerRadius + t.innerRadius,\n          outerRadius: t.innerRadius\n        });\n      },\n      update: function (t) {\n        return t;\n      },\n      leave: function (t) {\n        return M({}, t, {\n          innerRadius: t.outerRadius,\n          outerRadius: t.outerRadius + t.outerRadius - t.innerRadius\n        });\n      }\n    },\n    pushOut: {\n      enter: function (t) {\n        return M({}, t, {\n          innerRadius: t.outerRadius,\n          outerRadius: t.outerRadius + t.outerRadius - t.innerRadius\n        });\n      },\n      update: function (t) {\n        return t;\n      },\n      leave: function (t) {\n        return M({}, t, {\n          innerRadius: t.innerRadius - t.outerRadius + t.innerRadius,\n          outerRadius: t.innerRadius\n        });\n      }\n    }\n  },\n  I = function (t, n) {\n    return v(function () {\n      var e = E[t];\n      return {\n        enter: function (t) {\n          return M({\n            progress: 0\n          }, e.enter(t.arc), n ? n.enter(t) : {});\n        },\n        update: function (t) {\n          return M({\n            progress: 1\n          }, e.update(t.arc), n ? n.update(t) : {});\n        },\n        leave: function (t) {\n          return M({\n            progress: 0\n          }, e.leave(t.arc), n ? n.leave(t) : {});\n        }\n      };\n    }, [t, n]);\n  },\n  T = function (t, n) {\n    var e = l(t) - Math.PI / 2,\n      r = t.innerRadius + (t.outerRadius - t.innerRadius) * n;\n    return o(e, r);\n  },\n  j = function (t) {\n    return function (e, r, i, a) {\n      return n([e, r, i, a], function (n, e, r, i) {\n        var a = T({\n          startAngle: n,\n          endAngle: e,\n          innerRadius: r,\n          outerRadius: i\n        }, t);\n        return \"translate(\" + a.x + \",\" + a.y + \")\";\n      });\n    };\n  },\n  W = function (t, n, r, i) {\n    void 0 === n && (n = .5), void 0 === r && (r = \"innerRadius\");\n    var a = s(),\n      o = a.animate,\n      u = a.config,\n      l = I(r, i);\n    return {\n      transition: e(t, {\n        keys: function (t) {\n          return t.id;\n        },\n        initial: l.update,\n        from: l.enter,\n        enter: l.update,\n        update: l.update,\n        leave: l.leave,\n        config: u,\n        immediate: !o\n      }),\n      interpolate: j(n)\n    };\n  },\n  S = function (t) {\n    var n = t.data,\n      e = t.offset,\n      r = void 0 === e ? .5 : e,\n      i = t.skipAngle,\n      a = void 0 === i ? 0 : i,\n      o = t.computeExtraProps,\n      u = void 0 === o ? function () {\n        return {};\n      } : o;\n    return v(function () {\n      return L(n, a).map(function (t) {\n        var n = T(t.arc, r);\n        return M({}, u(t), {\n          x: n.x,\n          y: n.y,\n          data: t\n        });\n      });\n    }, [n, r, a, u]);\n  },\n  B = function (t) {\n    var n = t.center,\n      e = t.data,\n      r = t.transitionMode,\n      o = t.label,\n      u = t.radiusOffset,\n      l = t.skipAngle,\n      s = t.textColor,\n      f = t.component,\n      c = void 0 === f ? C : f,\n      g = d(o),\n      h = i(),\n      x = R(s, h),\n      m = v(function () {\n        return e.filter(function (t) {\n          return Math.abs(a(t.arc.endAngle - t.arc.startAngle)) >= l;\n        });\n      }, [e, l]),\n      y = W(m, u, r),\n      k = y.transition,\n      b = y.interpolate,\n      L = c;\n    return p(\"g\", {\n      transform: \"translate(\" + n[0] + \",\" + n[1] + \")\",\n      children: k(function (t, n) {\n        return A(L, {\n          key: n.id,\n          datum: n,\n          label: g(n),\n          style: M({}, t, {\n            transform: b(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius),\n            textColor: x(n)\n          })\n        });\n      })\n    });\n  },\n  w = function (t, n, e) {\n    t.textAlign = \"center\", t.textBaseline = \"middle\", t.font = e.labels.text.fontSize + \"px \" + e.labels.text.fontFamily, n.forEach(function (n) {\n      t.fillStyle = n.textColor, t.fillText(\"\" + n.label, n.x, n.y);\n    });\n  },\n  z = function (t) {\n    var n = t.data,\n      e = t.offset,\n      r = t.skipAngle,\n      a = t.label,\n      o = t.textColor,\n      u = d(a),\n      l = i(),\n      s = R(o, l),\n      f = x(function (t) {\n        return {\n          label: u(t),\n          textColor: s(t)\n        };\n      }, [u, s]);\n    return S({\n      data: n,\n      offset: e,\n      skipAngle: r,\n      computeExtraProps: f\n    });\n  },\n  F = C,\n  G = function (n) {\n    var e = n.label,\n      r = n.style,\n      a = i();\n    return h(t.g, {\n      opacity: r.opacity,\n      children: [p(t.path, {\n        fill: \"none\",\n        stroke: r.linkColor,\n        strokeWidth: r.thickness,\n        d: r.path\n      }), p(t.text, {\n        transform: r.textPosition,\n        textAnchor: r.textAnchor,\n        dominantBaseline: \"central\",\n        style: M({}, a.labels.text, {\n          fill: r.textColor\n        }),\n        children: e\n      })]\n    });\n  },\n  q = function (t) {\n    var n = b(t.startAngle + (t.endAngle - t.startAngle) / 2 - Math.PI / 2);\n    return n < Math.PI / 2 || n > 1.5 * Math.PI ? \"start\" : \"end\";\n  },\n  D = function (t, n, e, r) {\n    var i,\n      a,\n      u = b(t.startAngle + (t.endAngle - t.startAngle) / 2 - Math.PI / 2),\n      l = o(u, t.outerRadius + n),\n      s = o(u, t.outerRadius + n + e);\n    return u < Math.PI / 2 || u > 1.5 * Math.PI ? (i = \"after\", a = {\n      x: s.x + r,\n      y: s.y\n    }) : (i = \"before\", a = {\n      x: s.x - r,\n      y: s.y\n    }), {\n      side: i,\n      points: [l, s, a]\n    };\n  },\n  H = m().x(function (t) {\n    return t.x;\n  }).y(function (t) {\n    return t.y;\n  }),\n  J = function (t, e, r, i, a, o, u) {\n    return n([t, e, r, i, a, o, u], function (t, n, e, r, i, a, o) {\n      var u = D({\n        startAngle: t,\n        endAngle: n,\n        innerRadius: e,\n        outerRadius: r\n      }, i, a, o).points;\n      return H(u);\n    });\n  },\n  K = function (t, e, r, i) {\n    return n([t, e, r, i], function (t, n, e, r) {\n      return q({\n        startAngle: t,\n        endAngle: n,\n        innerRadius: e,\n        outerRadius: r\n      });\n    });\n  },\n  N = function (t, e, r, i, a, o, u, l) {\n    return n([t, e, r, i, a, o, u, l], function (t, n, e, r, i, a, o, u) {\n      var l = D({\n          startAngle: t,\n          endAngle: n,\n          innerRadius: e,\n          outerRadius: r\n        }, i, a, o),\n        s = l.points,\n        d = l.side,\n        f = s[2];\n      return \"before\" === d ? f.x -= u : f.x += u, \"translate(\" + f.x + \",\" + f.y + \")\";\n    });\n  },\n  Q = function (t) {\n    var n = t.data,\n      r = t.offset,\n      a = void 0 === r ? 0 : r,\n      o = t.diagonalLength,\n      u = t.straightLength,\n      l = t.skipAngle,\n      d = void 0 === l ? 0 : l,\n      f = t.textOffset,\n      c = t.linkColor,\n      g = t.textColor,\n      p = s(),\n      h = p.animate,\n      A = p.config,\n      x = i(),\n      m = R(c, x),\n      y = R(g, x),\n      M = function (t, n) {\n        return v(function () {\n          return L(t, n);\n        }, [t, n]);\n      }(n, d),\n      k = function (t) {\n        var n = t.offset,\n          e = t.diagonalLength,\n          r = t.straightLength,\n          i = t.textOffset,\n          a = t.getLinkColor,\n          o = t.getTextColor;\n        return v(function () {\n          return {\n            enter: function (t) {\n              return {\n                startAngle: t.arc.startAngle,\n                endAngle: t.arc.endAngle,\n                innerRadius: t.arc.innerRadius,\n                outerRadius: t.arc.outerRadius,\n                offset: n,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset: i,\n                linkColor: a(t),\n                textColor: o(t),\n                opacity: 0\n              };\n            },\n            update: function (t) {\n              return {\n                startAngle: t.arc.startAngle,\n                endAngle: t.arc.endAngle,\n                innerRadius: t.arc.innerRadius,\n                outerRadius: t.arc.outerRadius,\n                offset: n,\n                diagonalLength: e,\n                straightLength: r,\n                textOffset: i,\n                linkColor: a(t),\n                textColor: o(t),\n                opacity: 1\n              };\n            },\n            leave: function (t) {\n              return {\n                startAngle: t.arc.startAngle,\n                endAngle: t.arc.endAngle,\n                innerRadius: t.arc.innerRadius,\n                outerRadius: t.arc.outerRadius,\n                offset: n,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset: i,\n                linkColor: a(t),\n                textColor: o(t),\n                opacity: 0\n              };\n            }\n          };\n        }, [e, r, i, a, o]);\n      }({\n        offset: a,\n        diagonalLength: o,\n        straightLength: u,\n        textOffset: f,\n        getLinkColor: m,\n        getTextColor: y\n      });\n    return {\n      transition: e(M, {\n        keys: function (t) {\n          return t.id;\n        },\n        initial: k.update,\n        from: k.enter,\n        enter: k.update,\n        update: k.update,\n        leave: k.leave,\n        config: A,\n        immediate: !h\n      }),\n      interpolateLink: J,\n      interpolateTextAnchor: K,\n      interpolateTextPosition: N\n    };\n  },\n  U = function (t) {\n    var n = t.center,\n      e = t.data,\n      r = t.label,\n      i = t.skipAngle,\n      a = t.offset,\n      o = t.diagonalLength,\n      u = t.straightLength,\n      l = t.strokeWidth,\n      s = t.textOffset,\n      f = t.textColor,\n      c = t.linkColor,\n      g = t.component,\n      h = void 0 === g ? G : g,\n      v = d(r),\n      x = Q({\n        data: e,\n        skipAngle: i,\n        offset: a,\n        diagonalLength: o,\n        straightLength: u,\n        textOffset: s,\n        linkColor: c,\n        textColor: f\n      }),\n      R = x.transition,\n      m = x.interpolateLink,\n      y = x.interpolateTextAnchor,\n      k = x.interpolateTextPosition,\n      C = h;\n    return p(\"g\", {\n      transform: \"translate(\" + n[0] + \",\" + n[1] + \")\",\n      children: R(function (t, n) {\n        return A(C, {\n          key: n.id,\n          datum: n,\n          label: v(n),\n          style: M({}, t, {\n            thickness: l,\n            path: m(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius, t.offset, t.diagonalLength, t.straightLength),\n            textAnchor: y(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius),\n            textPosition: k(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius, t.offset, t.diagonalLength, t.straightLength, t.textOffset)\n          })\n        });\n      })\n    });\n  },\n  V = function (t, n, e, r) {\n    t.textBaseline = \"middle\", t.font = e.labels.text.fontSize + \"px \" + e.labels.text.fontFamily, n.forEach(function (n) {\n      t.fillStyle = n.textColor, t.textAlign = f.canvas.align[n.textAnchor], t.fillText(\"\" + n.label, n.x, n.y), t.beginPath(), t.strokeStyle = n.linkColor, t.lineWidth = r, n.points.forEach(function (n, e) {\n        0 === e ? t.moveTo(n.x, n.y) : t.lineTo(n.x, n.y);\n      }), t.stroke();\n    });\n  },\n  X = function (t) {\n    var n = t.data,\n      e = t.skipAngle,\n      r = void 0 === e ? 0 : e,\n      i = t.offset,\n      o = void 0 === i ? .5 : i,\n      u = t.diagonalLength,\n      l = t.straightLength,\n      s = t.computeExtraProps,\n      d = void 0 === s ? function () {\n        return {};\n      } : s,\n      f = v(function () {\n        return n.filter(function (t) {\n          return Math.abs(a(t.arc.endAngle - t.arc.startAngle)) >= r;\n        }).map(function (t) {\n          return M({}, D(t.arc, o, u, l), {\n            data: t\n          });\n        });\n      }, [n, r, o, u, l]);\n    return v(function () {\n      return f.map(function (t) {\n        return M({}, d(t), t);\n      });\n    }, [f, d]);\n  },\n  Y = function (t) {\n    var n = t.data,\n      e = t.skipAngle,\n      r = t.offset,\n      a = t.diagonalLength,\n      o = t.straightLength,\n      u = t.textOffset,\n      l = void 0 === u ? 0 : u,\n      s = t.label,\n      f = t.linkColor,\n      c = t.textColor,\n      g = d(s),\n      p = i(),\n      h = R(f, p),\n      v = R(c, p),\n      A = x(function (t) {\n        var n,\n          e = {\n            x: t.points[2].x,\n            y: t.points[2].y\n          };\n        return \"before\" === t.side ? (e.x -= l, n = \"end\") : (e.x += l, n = \"start\"), M({}, e, {\n          label: g(t.data),\n          linkColor: h(t.data),\n          textAnchor: n,\n          textColor: v(t.data)\n        });\n      }, [g, h, v, l]);\n    return X({\n      data: n,\n      skipAngle: e,\n      offset: r,\n      diagonalLength: a,\n      straightLength: o,\n      computeExtraProps: A\n    });\n  },\n  Z = G,\n  $ = [\"animated\"],\n  _ = function (e) {\n    var r = e.animated,\n      i = function (t, n) {\n        if (null == t) return {};\n        var e,\n          r,\n          i = {},\n          a = Object.keys(t);\n        for (r = 0; r < a.length; r++) e = a[r], n.indexOf(e) >= 0 || (i[e] = t[e]);\n        return i;\n      }(e, $);\n    return p(t.path, M({\n      d: n([r.radius, r.startAngle, r.endAngle], function (t, n, e) {\n        return function (t, n, e) {\n          var r = Math.min(n, e),\n            i = Math.max(n, e),\n            a = o(u(i), t),\n            l = o(u(r), t);\n          if (i - r >= 360) {\n            var s = o(u(r + 180), t);\n            return [\"M \" + a.x + \" \" + a.y, P(t, 1, 1, s.x, s.y), \"M \" + a.x + \" \" + a.y, P(t, 1, 0, s.x, s.y)].join(\" \");\n          }\n          var d = i - r <= 180 ? 0 : 1;\n          return [\"M \" + a.x + \" \" + a.y, P(t, d, 0, l.x, l.y)].join(\" \");\n        }(t, n, e);\n      })\n    }, i));\n  },\n  tt = function (n) {\n    var e = n.datum,\n      r = n.style,\n      i = n.onClick,\n      a = n.onMouseEnter,\n      o = n.onMouseMove,\n      u = n.onMouseLeave,\n      l = x(function (t) {\n        return null == i ? void 0 : i(e, t);\n      }, [i, e]),\n      s = x(function (t) {\n        return null == a ? void 0 : a(e, t);\n      }, [a, e]),\n      d = x(function (t) {\n        return null == o ? void 0 : o(e, t);\n      }, [o, e]),\n      f = x(function (t) {\n        return null == u ? void 0 : u(e, t);\n      }, [u, e]);\n    return p(t.path, {\n      d: r.path,\n      opacity: r.opacity,\n      fill: e.fill || r.color,\n      stroke: r.borderColor,\n      strokeWidth: r.borderWidth,\n      onClick: i ? l : void 0,\n      onMouseEnter: a ? s : void 0,\n      onMouseMove: o ? d : void 0,\n      onMouseLeave: u ? f : void 0\n    });\n  },\n  nt = function (t, e, r, i, a) {\n    return n([t, e, r, i], function (t, n, e, r) {\n      return a({\n        startAngle: t,\n        endAngle: n,\n        innerRadius: Math.max(0, e),\n        outerRadius: Math.max(0, r)\n      });\n    });\n  },\n  et = function (t, n, r) {\n    void 0 === n && (n = \"innerRadius\");\n    var i = s(),\n      a = i.animate,\n      o = i.config,\n      u = I(n, r);\n    return {\n      transition: e(t, {\n        keys: function (t) {\n          return t.id;\n        },\n        initial: u.update,\n        from: u.enter,\n        enter: u.update,\n        update: u.update,\n        leave: u.leave,\n        config: o,\n        immediate: !a\n      }),\n      interpolate: nt\n    };\n  },\n  rt = function (t) {\n    var n = t.center,\n      e = t.data,\n      r = t.arcGenerator,\n      a = t.borderWidth,\n      o = t.borderColor,\n      u = t.onClick,\n      l = t.onMouseEnter,\n      s = t.onMouseMove,\n      d = t.onMouseLeave,\n      f = t.transitionMode,\n      c = t.component,\n      g = void 0 === c ? tt : c,\n      h = i(),\n      v = R(o, h),\n      x = et(e, f, {\n        enter: function (t) {\n          return {\n            opacity: 0,\n            color: t.color,\n            borderColor: v(t)\n          };\n        },\n        update: function (t) {\n          return {\n            opacity: 1,\n            color: t.color,\n            borderColor: v(t)\n          };\n        },\n        leave: function (t) {\n          return {\n            opacity: 0,\n            color: t.color,\n            borderColor: v(t)\n          };\n        }\n      }),\n      m = x.transition,\n      y = x.interpolate,\n      k = g;\n    return p(\"g\", {\n      transform: \"translate(\" + n[0] + \",\" + n[1] + \")\",\n      children: m(function (t, n) {\n        return A(k, {\n          key: n.id,\n          datum: n,\n          style: M({}, t, {\n            borderWidth: a,\n            path: y(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius, r)\n          }),\n          onClick: u,\n          onMouseEnter: l,\n          onMouseMove: s,\n          onMouseLeave: d\n        });\n      })\n    });\n  },\n  it = function (t, n, e, r, i, a) {\n    void 0 === a && (a = !0);\n    var l = [],\n      s = o(u(r), e);\n    l.push([s.x, s.y]);\n    var d = o(u(i), e);\n    l.push([d.x, d.y]);\n    for (var f = Math.round(Math.min(r, i)); f <= Math.round(Math.max(r, i)); f++) if (f % 90 == 0) {\n      var c = o(u(f), e);\n      l.push([c.x, c.y]);\n    }\n    l = l.map(function (e) {\n      var r = e[0],\n        i = e[1];\n      return [t + r, n + i];\n    }), a && l.push([t, n]);\n    var g = l.map(function (t) {\n        return t[0];\n      }),\n      p = l.map(function (t) {\n        return t[1];\n      }),\n      h = Math.min.apply(Math, g),\n      v = Math.max.apply(Math, g),\n      A = Math.min.apply(Math, p);\n    return {\n      points: l,\n      x: h,\n      y: A,\n      width: v - h,\n      height: Math.max.apply(Math, p) - A\n    };\n  },\n  at = function (t, n, e, r, i, a) {\n    var o = c(i, a, t, n);\n    return o < e && o > r;\n  },\n  ot = function (t, n, e, r, i, a, o) {\n    if (at(t, n, e, r, a, o)) {\n      var u = g(a, o, t, n);\n      return i.find(function (t) {\n        var n = t.startAngle,\n          e = t.endAngle;\n        return u >= n && u < e;\n      });\n    }\n  },\n  ut = function (t, n) {\n    var e = s(),\n      i = e.animate,\n      a = e.config,\n      o = r({\n        startAngle: t.arc.startAngle,\n        endAngle: t.arc.endAngle,\n        innerRadius: t.arc.innerRadius,\n        outerRadius: t.arc.outerRadius,\n        config: a,\n        immediate: !i\n      });\n    return M({}, o, {\n      path: nt(o.startAngle, o.endAngle, o.innerRadius, o.outerRadius, n)\n    });\n  },\n  lt = function (t) {\n    var n = void 0 === t ? {} : t,\n      e = n.cornerRadius,\n      r = void 0 === e ? 0 : e,\n      i = n.padAngle,\n      a = void 0 === i ? 0 : i;\n    return v(function () {\n      return y().innerRadius(function (t) {\n        return t.innerRadius;\n      }).outerRadius(function (t) {\n        return t.outerRadius;\n      }).cornerRadius(r).padAngle(a);\n    }, [r, a]);\n  };\nexport { F as ArcLabelComponent, B as ArcLabelsLayer, _ as ArcLine, Z as ArcLinkLabelComponent, U as ArcLinkLabelsLayer, tt as ArcShape, rt as ArcsLayer, E as arcTransitionModeById, O as arcTransitionModes, it as computeArcBoundingBox, T as computeArcCenter, D as computeArcLink, q as computeArcLinkTextAnchor, w as drawCanvasArcLabels, V as drawCanvasArcLinkLabels, ot as findArcUnderCursor, nt as interpolateArc, j as interpolateArcCenter, at as isCursorInRing, ut as useAnimatedArc, S as useArcCenters, W as useArcCentersTransition, lt as useArcGenerator, z as useArcLabels, Y as useArcLinkLabels, Q as useArcLinkLabelsTransition, X as useArcLinks, I as useArcTransitionMode, et as useArcsTransition };","map":{"version":3,"names":["k","pointerEvents","C","ArcLabel","n","e","label","r","style","a","i","p","t","g","transform","opacity","progress","children","text","textAnchor","dominantBaseline","M","labels","fill","textColor","b","getNormalizedAngle","Math","PI","L","filterDataBySkipAngle","filter","abs","arc","endAngle","startAngle","P","svgEllipticalArcCommand","join","O","E","enter","update","leave","middleAngle","innerRadius","outerRadius","centerRadius","pushIn","pushOut","I","useArcTransitionMode","v","T","computeArcCenter","l","o","j","interpolateArcCenter","x","y","W","useArcCentersTransition","s","animate","u","config","transition","keys","id","initial","from","immediate","interpolate","S","useArcCenters","data","offset","skipAngle","computeExtraProps","map","B","ArcLabelsLayer","center","transitionMode","radiusOffset","f","component","c","d","h","R","m","A","key","datum","w","drawCanvasArcLabels","textAlign","textBaseline","font","fontSize","fontFamily","forEach","fillStyle","fillText","z","useArcLabels","F","G","ArcLinkLabel","path","stroke","linkColor","strokeWidth","thickness","textPosition","q","computeArcLinkTextAnchor","D","computeArcLink","side","points","H","J","interpolateLink","K","interpolateTextAnchor","N","interpolateTextPosition","Q","useArcLinkLabelsTransition","diagonalLength","straightLength","textOffset","getLinkColor","getTextColor","U","ArcLinkLabelsLayer","V","drawCanvasArcLinkLabels","canvas","align","beginPath","strokeStyle","lineWidth","moveTo","lineTo","X","useArcLinks","Y","useArcLinkLabels","Z","$","_","ArcLine","animated","Object","length","indexOf","radius","min","max","tt","ArcShape","onClick","onMouseEnter","onMouseMove","onMouseLeave","color","borderColor","borderWidth","nt","interpolateArc","et","useArcsTransition","rt","ArcsLayer","arcGenerator","it","computeArcBoundingBox","push","round","apply","width","height","at","isCursorInRing","ot","findArcUnderCursor","find","ut","useAnimatedArc","lt","useArcGenerator","cornerRadius","padAngle","ArcLabelComponent","ArcLinkLabelComponent","arcTransitionModeById","arcTransitionModes"],"sources":["/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_labels/ArcLabel.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/utils.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arcTransitionMode.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/centers.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_labels/ArcLabelsLayer.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_labels/canvas.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_labels/useArcLabels.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_labels/index.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_link_labels/ArcLinkLabel.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_link_labels/compute.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_link_labels/useArcLinkLabelsTransition.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_link_labels/ArcLinkLabelsLayer.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_link_labels/canvas.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_link_labels/useArcLinks.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_link_labels/useArcLinkLabels.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/arc_link_labels/index.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/ArcLine.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/ArcShape.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/interpolateArc.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/useArcsTransition.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/ArcsLayer.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/boundingBox.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/interactivity.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/useAnimatedArc.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/arcs/src/useArcGenerator.ts"],"sourcesContent":["import { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees, positionFromAngle, degreesToRadians } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n\nexport const svgEllipticalArcCommand = (\n    radius: number,\n    largeArcFlag: 0 | 1,\n    sweepFlag: 0 | 1,\n    x: number,\n    y: number\n) =>\n    [\n        'A',\n        radius,\n        radius,\n        0, // x-axis-rotation\n        largeArcFlag,\n        sweepFlag,\n        x,\n        y,\n    ].join(' ')\n\nexport const generateSvgArc = (\n    radius: number,\n    originalStartAngle: number,\n    originalEndAngle: number\n): string => {\n    const startAngle = Math.min(originalStartAngle, originalEndAngle)\n    const endAngle = Math.max(originalStartAngle, originalEndAngle)\n\n    const start = positionFromAngle(degreesToRadians(endAngle), radius)\n    const end = positionFromAngle(degreesToRadians(startAngle), radius)\n\n    // we have a full circle, we cannot use a single elliptical arc\n    // to draw it, so we use 2 in that case.\n    if (endAngle - startAngle >= 360) {\n        const mid = positionFromAngle(degreesToRadians(startAngle + 180), radius)\n\n        return [\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 1, mid.x, mid.y),\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 0, mid.x, mid.y),\n        ].join(' ')\n    }\n\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1\n\n    return [\n        `M ${start.x} ${start.y}`,\n        svgEllipticalArcCommand(radius, largeArcFlag, 0, end.x, end.y),\n    ].join(' ')\n}\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = typeof arcTransitionModes[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<Datum extends DatumWithArc, ExtraProps> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport const useArcTransitionMode = <Datum extends DatumWithArc, ExtraProps>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.enter(datum.arc),\n                ...(extraTransition ? extraTransition.enter(datum) : {}),\n            }),\n            update: (datum: Datum) => ({\n                progress: 1,\n                ...transitionMode.update(datum.arc),\n                ...(extraTransition ? extraTransition.update(datum) : {}),\n            }),\n            leave: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.leave(datum.arc),\n                ...(extraTransition ? extraTransition.leave(datum) : {}),\n            }),\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue } from '@react-spring/web'\nimport {\n    // @ts-ignore\n    midAngle,\n    positionFromAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport { ArcTransitionMode, TransitionExtra, useArcTransitionMode } from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter =\n    (offset: number) =>\n    (\n        startAngleValue: SpringValue<number>,\n        endAngleValue: SpringValue<number>,\n        innerRadiusValue: SpringValue<number>,\n        outerRadiusValue: SpringValue<number>\n    ) =>\n        to(\n            [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n            (startAngle, endAngle, innerRadius, outerRadius) => {\n                const centroid = computeArcCenter(\n                    { startAngle, endAngle, innerRadius, outerRadius },\n                    offset\n                )\n\n                return `translate(${centroid.x},${centroid.y})`\n            }\n        )\n\nexport const useArcCentersTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import { createElement, useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                return (\n                    Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                    skipAngle\n                )\n            }),\n        [data, skipAngle]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabel } from './useArcLabels'\n\nexport const drawCanvasArcLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLabel<Datum>[],\n    theme: CompleteTheme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, label.x, label.y)\n    })\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcCenters, ArcCenter } from '../centers'\n\nexport interface ArcLabel<Datum extends DatumWithArcAndColor> extends ArcCenter<Datum> {\n    label: string\n    textColor: string\n}\n\n/**\n * Compute arc labels, please note that the datum should\n * contain a color in order to be able to compute the label text color.\n *\n * Please see `useArcCenters` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset,\n    skipAngle,\n    label,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    skipAngle?: number\n    label: PropertyAccessor<Datum, string>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (datum: Datum) => {\n            return {\n                label: getLabel(datum),\n                textColor: getTextColor(datum),\n            }\n        },\n        [getLabel, getTextColor]\n    )\n\n    return useArcCenters<Datum, Omit<ArcLabel<Datum>, keyof ArcCenter<Datum>>>({\n        data,\n        offset,\n        skipAngle,\n        computeExtraProps,\n    })\n}\n","import { ArcLabel } from './ArcLabel'\n\nexport const ArcLabelComponent = ArcLabel\nexport * from './ArcLabelsLayer'\nexport * from './canvas'\nexport * from './props'\nexport * from './useArcLabels'\n","import { useTheme } from '@nivo/core'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <animated.text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from '@react-spring/web'\nimport { line } from 'd3-shape'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import { createElement } from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const { transition, interpolateLink, interpolateTextAnchor, interpolateTextPosition } =\n        useArcLinkLabelsTransition<Datum>({\n            data,\n            skipAngle,\n            offset,\n            diagonalLength,\n            straightLength,\n            textOffset,\n            linkColor,\n            textColor,\n        })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import {\n    // @ts-ignore\n    textPropsByEngine,\n    CompleteTheme,\n} from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkLabel } from './types'\n\nexport const drawCanvasArcLinkLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLinkLabel<Datum>[],\n    theme: CompleteTheme,\n    strokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor]\n        ctx.fillText(`${label.label}`, label.x, label.y)\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = strokeWidth\n        label.points.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        ctx.stroke()\n    })\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from '../types'\nimport { ArcLinkWithDatum } from './types'\nimport { computeArcLink } from './compute'\n\n/**\n * Compute links for an array of data containing arcs.\n *\n * This is typically used to create labels for arcs,\n * and it's used for the `useArcLinkLabels` hook.\n */\nexport const useArcLinks = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    skipAngle = 0,\n    offset = 0.5,\n    diagonalLength,\n    straightLength,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // offset from arc outer radius in pixels\n    offset?: number\n    // length of the diagonal segment of the link\n    diagonalLength: number\n    // length of the straight segment of the link\n    straightLength: number\n    // this can be used to append extra properties to the links,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: ArcLinkWithDatum<Datum>) => ExtraProps\n}): (ArcLinkWithDatum<Datum> & ExtraProps)[] => {\n    const links = useMemo(\n        () =>\n            data\n                // filter out arcs with a length below `skipAngle`\n                .filter(\n                    datum =>\n                        Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                        skipAngle\n                )\n                // compute the link for each eligible arc\n                .map(datum => ({\n                    ...computeArcLink(datum.arc, offset, diagonalLength, straightLength),\n                    data: datum,\n                })),\n        [data, skipAngle, offset, diagonalLength, straightLength]\n    )\n\n    // splitting memoization of links and extra props can be more efficient,\n    // this way if only `computeExtraProps` changes, we skip links computation.\n    return useMemo(\n        () =>\n            links.map(link => ({\n                ...computeExtraProps(link),\n                ...link,\n            })),\n        [links, computeExtraProps]\n    )\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkWithDatum, ArcLinkLabel } from './types'\nimport { useArcLinks } from './useArcLinks'\n\n/**\n * Compute arc link labels, please note that the datum should\n * contain a color in order to be able to compute the link/label text color.\n *\n * Please see `useArcLinks` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLinkLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset = 0,\n    label,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    skipAngle?: number\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    label: PropertyAccessor<Datum, string>\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (link: ArcLinkWithDatum<Datum>) => {\n            const position = {\n                x: link.points[2].x,\n                y: link.points[2].y,\n            }\n            let textAnchor: ArcLinkLabel<Datum>['textAnchor']\n            if (link.side === 'before') {\n                position.x -= textOffset\n                textAnchor = 'end'\n            } else {\n                position.x += textOffset\n                textAnchor = 'start'\n            }\n\n            return {\n                ...position,\n                label: getLabel(link.data),\n                linkColor: getLinkColor(link.data),\n                textAnchor,\n                textColor: getTextColor(link.data),\n            }\n        },\n        [getLabel, getLinkColor, getTextColor, textOffset]\n    )\n\n    return useArcLinks<Datum, Omit<ArcLinkLabel<Datum>, keyof ArcLinkWithDatum<Datum>>>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        computeExtraProps,\n    })\n}\n","import { ArcLinkLabel } from './ArcLinkLabel'\n\nexport const ArcLinkLabelComponent = ArcLinkLabel\nexport * from './ArcLinkLabelsLayer'\nexport * from './canvas'\nexport * from './compute'\nexport * from './props'\nexport * from './types'\nexport * from './useArcLinkLabels'\nexport * from './useArcLinkLabelsTransition'\nexport * from './useArcLinks'\n","import { animated, to, AnimatedProps } from '@react-spring/web'\nimport { ExtractProps } from '@nivo/core'\nimport { generateSvgArc } from './utils'\n\ntype ArcLineProps = {\n    animated: AnimatedProps<{\n        radius: number\n        startAngle: number\n        endAngle: number\n        opacity: number\n    }>\n} & ExtractProps<typeof animated.path>\n\nexport const ArcLine = ({ animated: animatedProps, ...rest }: ArcLineProps) => (\n    <animated.path\n        d={to(\n            [animatedProps.radius, animatedProps.startAngle, animatedProps.endAngle],\n            (radius, start, end) => generateSvgArc(radius, start, end)\n        )}\n        {...rest}\n    />\n)\n","import { useCallback } from 'react'\nimport * as React from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: React.MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(event => onClick?.(datum, event), [onClick, datum])\n\n    const handleMouseEnter = useCallback(\n        event => onMouseEnter?.(datum, event),\n        [onMouseEnter, datum]\n    )\n\n    const handleMouseMove = useCallback(event => onMouseMove?.(datum, event), [onMouseMove, datum])\n\n    const handleMouseLeave = useCallback(\n        event => onMouseLeave?.(datum, event),\n        [onMouseLeave, datum]\n    )\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { to, SpringValue } from '@react-spring/web'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport { ArcTransitionMode, useArcTransitionMode, TransitionExtra } from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","import { createElement } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import { getDistance, getAngle } from '@nivo/core'\nimport { Arc } from './types'\n\n/**\n * Check if cursor is in given ring.\n */\nexport const isCursorInRing = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    cursorX: number,\n    cursorY: number\n) => {\n    const distance = getDistance(cursorX, cursorY, centerX, centerY)\n\n    return distance < radius && distance > innerRadius\n}\n\n/**\n * Search for an arc being under cursor.\n */\nexport const findArcUnderCursor = <A extends Arc = Arc>(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    arcs: A[],\n    cursorX: number,\n    cursorY: number\n): A | undefined => {\n    if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n        return undefined\n    }\n\n    const cursorAngle = getAngle(cursorX, cursorY, centerX, centerY)\n\n    return arcs.find(\n        ({ startAngle, endAngle }) => cursorAngle >= startAngle && cursorAngle < endAngle\n    )\n}\n","import { useSpring } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { Arc, ArcGenerator } from './types'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a single arc,\n * if you want to animate a group of arcs,\n * please have a look at the `useArcsTransition` hook.\n */\nexport const useAnimatedArc = (datumWithArc: { arc: Arc }, arcGenerator: ArcGenerator) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedValues = useSpring({\n        startAngle: datumWithArc.arc.startAngle,\n        endAngle: datumWithArc.arc.endAngle,\n        innerRadius: datumWithArc.arc.innerRadius,\n        outerRadius: datumWithArc.arc.outerRadius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        ...animatedValues,\n        path: interpolateArc(\n            animatedValues.startAngle,\n            animatedValues.endAngle,\n            animatedValues.innerRadius,\n            animatedValues.outerRadius,\n            arcGenerator\n        ),\n    }\n}\n","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}