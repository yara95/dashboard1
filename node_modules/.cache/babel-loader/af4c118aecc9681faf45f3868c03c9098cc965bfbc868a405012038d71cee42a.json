{"ast":null,"code":"import { useMemo as n, Fragment as e, createElement as i, useRef as o, useState as t, useCallback as r } from \"react\";\nimport { Container as l, useDimensions as u, SvgWrapper as a, ResponsiveWrapper as d, getRelativeCursor as s } from \"@nivo/core\";\nimport { scaleLinear as c } from \"d3-scale\";\nimport { Delaunay as h } from \"d3-delaunay\";\nimport { jsx as f, jsxs as v, Fragment as p } from \"react/jsx-runtime\";\nfunction m() {\n  return m = Object.assign || function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = arguments[e];\n      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);\n    }\n    return n;\n  }, m.apply(this, arguments);\n}\nvar y = {\n    xDomain: [0, 1],\n    yDomain: [0, 1],\n    layers: [\"links\", \"cells\", \"points\", \"bounds\"],\n    enableLinks: !1,\n    linkLineWidth: 1,\n    linkLineColor: \"#bbbbbb\",\n    enableCells: !0,\n    cellLineWidth: 2,\n    cellLineColor: \"#000000\",\n    enablePoints: !0,\n    pointSize: 4,\n    pointColor: \"#666666\",\n    role: \"img\"\n  },\n  g = function (n) {\n    return \"function\" == typeof n ? n : function (e) {\n      return e[n];\n    };\n  },\n  b = function (n) {\n    var e = n.points,\n      i = n.x,\n      o = void 0 === i ? \"x\" : i,\n      t = n.y,\n      r = void 0 === t ? \"y\" : t,\n      l = g(o),\n      u = g(r);\n    return e.map(function (n) {\n      return [l(n), u(n)];\n    });\n  },\n  k = function (n) {\n    var e = n.points,\n      i = n.width,\n      o = n.height,\n      t = n.debug,\n      r = h.from(e),\n      l = t ? r.voronoi([0, 0, i, o]) : void 0;\n    return {\n      delaunay: r,\n      voronoi: l\n    };\n  },\n  x = function (e) {\n    var i = e.points,\n      o = e.x,\n      t = e.y,\n      r = e.width,\n      l = e.height,\n      u = e.debug,\n      a = n(function () {\n        return b({\n          points: i,\n          x: o,\n          y: t\n        });\n      }, [i, o, t]);\n    return n(function () {\n      return k({\n        points: a,\n        width: r,\n        height: l,\n        debug: u\n      });\n    }, [a, r, l, u]);\n  },\n  C = function (e) {\n    var i = e.data,\n      o = e.width,\n      t = e.height,\n      r = e.xDomain,\n      l = e.yDomain,\n      u = n(function () {\n        return c().domain(r).range([0, o]);\n      }, [r, o]),\n      a = n(function () {\n        return c().domain(l).range([0, t]);\n      }, [l, t]),\n      d = n(function () {\n        return i.map(function (n) {\n          return {\n            x: u(n.x),\n            y: a(n.y),\n            data: n\n          };\n        });\n      }, [i, u, a]);\n    return n(function () {\n      var n = h.from(d.map(function (n) {\n          return [n.x, n.y];\n        })),\n        e = n.voronoi([0, 0, o, t]);\n      return {\n        points: d,\n        delaunay: n,\n        voronoi: e\n      };\n    }, [d, o, t]);\n  },\n  L = function (e) {\n    var i = e.points,\n      o = e.delaunay,\n      t = e.voronoi;\n    return n(function () {\n      return {\n        points: i,\n        delaunay: o,\n        voronoi: t\n      };\n    }, [i, o, t]);\n  },\n  w = [\"theme\"],\n  W = function (n) {\n    var o = n.data,\n      t = n.width,\n      r = n.height,\n      l = n.margin,\n      d = n.layers,\n      s = void 0 === d ? y.layers : d,\n      c = n.xDomain,\n      h = void 0 === c ? y.xDomain : c,\n      v = n.yDomain,\n      p = void 0 === v ? y.yDomain : v,\n      m = n.enableLinks,\n      g = void 0 === m ? y.enableLinks : m,\n      b = n.linkLineWidth,\n      k = void 0 === b ? y.linkLineWidth : b,\n      x = n.linkLineColor,\n      w = void 0 === x ? y.linkLineColor : x,\n      W = n.enableCells,\n      D = void 0 === W ? y.enableCells : W,\n      M = n.cellLineWidth,\n      P = void 0 === M ? y.cellLineWidth : M,\n      O = n.cellLineColor,\n      S = void 0 === O ? y.cellLineColor : O,\n      j = n.enablePoints,\n      z = void 0 === j ? y.enableCells : j,\n      A = n.pointSize,\n      E = void 0 === A ? y.pointSize : A,\n      H = n.pointColor,\n      B = void 0 === H ? y.pointColor : H,\n      F = n.role,\n      I = void 0 === F ? y.role : F,\n      q = u(t, r, l),\n      G = q.outerWidth,\n      J = q.outerHeight,\n      K = q.margin,\n      N = q.innerWidth,\n      Q = q.innerHeight,\n      R = C({\n        data: o,\n        width: N,\n        height: Q,\n        xDomain: h,\n        yDomain: p\n      }),\n      T = R.points,\n      U = R.delaunay,\n      V = R.voronoi,\n      X = {\n        links: null,\n        cells: null,\n        points: null,\n        bounds: null\n      };\n    g && s.includes(\"links\") && (X.links = f(\"path\", {\n      stroke: w,\n      strokeWidth: k,\n      fill: \"none\",\n      d: U.render()\n    }, \"links\")), D && s.includes(\"cells\") && (X.cells = f(\"path\", {\n      d: V.render(),\n      fill: \"none\",\n      stroke: S,\n      strokeWidth: P\n    }, \"cells\")), z && s.includes(\"points\") && (X.points = f(\"path\", {\n      stroke: \"none\",\n      fill: B,\n      d: U.renderPoints(void 0, E / 2)\n    }, \"points\")), s.includes(\"bounds\") && (X.bounds = f(\"path\", {\n      fill: \"none\",\n      stroke: S,\n      strokeWidth: P,\n      d: V.renderBounds()\n    }, \"bounds\"));\n    var Y = L({\n      points: T,\n      delaunay: U,\n      voronoi: V\n    });\n    return f(a, {\n      width: G,\n      height: J,\n      margin: K,\n      role: I,\n      children: s.map(function (n, o) {\n        return void 0 !== X[n] ? X[n] : \"function\" == typeof n ? f(e, {\n          children: i(n, Y)\n        }, o) : null;\n      })\n    });\n  },\n  D = function (n) {\n    var e = n.theme,\n      i = function (n, e) {\n        if (null == n) return {};\n        var i,\n          o,\n          t = {},\n          r = Object.keys(n);\n        for (o = 0; o < r.length; o++) i = r[o], e.indexOf(i) >= 0 || (t[i] = n[i]);\n        return t;\n      }(n, w);\n    return f(l, {\n      isInteractive: !1,\n      animate: !1,\n      theme: e,\n      children: f(W, m({}, i))\n    });\n  },\n  M = function (n) {\n    return f(d, {\n      children: function (e) {\n        var i = e.width,\n          o = e.height;\n        return f(D, m({\n          width: i,\n          height: o\n        }, n));\n      }\n    });\n  },\n  P = function (e) {\n    var i = e.nodes,\n      l = e.width,\n      u = e.height,\n      a = e.x,\n      d = e.y,\n      c = e.onMouseEnter,\n      h = e.onMouseMove,\n      m = e.onMouseLeave,\n      y = e.onClick,\n      g = e.debug,\n      b = o(null),\n      k = t(null),\n      C = k[0],\n      L = k[1],\n      w = x({\n        points: i,\n        x: a,\n        y: d,\n        width: l,\n        height: u,\n        debug: g\n      }),\n      W = w.delaunay,\n      D = w.voronoi,\n      M = n(function () {\n        if (g && D) return D.render();\n      }, [g, D]),\n      P = r(function (n) {\n        if (!b.current) return [null, null];\n        var e = s(b.current, n),\n          o = e[0],\n          t = e[1],\n          r = W.find(o, t);\n        return [r, void 0 !== r ? i[r] : null];\n      }, [b, W]),\n      O = r(function (n) {\n        var e = P(n),\n          i = e[0],\n          o = e[1];\n        L(i), o && (null == c || c(o, n));\n      }, [P, L, c]),\n      S = r(function (n) {\n        var e = P(n),\n          i = e[0],\n          o = e[1];\n        L(i), o && (null == h || h(o, n));\n      }, [P, L, h]),\n      j = r(function (n) {\n        if (L(null), m) {\n          var e = void 0;\n          null !== C && (e = i[C]), e && m(e, n);\n        }\n      }, [L, C, m, i]),\n      z = r(function (n) {\n        var e = P(n),\n          i = e[0],\n          o = e[1];\n        L(i), o && (null == y || y(o, n));\n      }, [P, L, y]);\n    return v(\"g\", {\n      ref: b,\n      children: [g && D && v(p, {\n        children: [f(\"path\", {\n          d: M,\n          stroke: \"red\",\n          strokeWidth: 1,\n          opacity: .75\n        }), null !== C && f(\"path\", {\n          fill: \"pink\",\n          opacity: .35,\n          d: D.renderCell(C)\n        })]\n      }), f(\"rect\", {\n        width: l,\n        height: u,\n        fill: \"red\",\n        opacity: 0,\n        style: {\n          cursor: \"auto\"\n        },\n        onMouseEnter: O,\n        onMouseMove: S,\n        onMouseLeave: j,\n        onClick: z\n      })]\n    });\n  },\n  O = function (n, e) {\n    n.save(), n.globalAlpha = .75, n.beginPath(), e.render(n), n.strokeStyle = \"red\", n.lineWidth = 1, n.stroke(), n.restore();\n  },\n  S = function (n, e, i) {\n    n.save(), n.globalAlpha = .35, n.beginPath(), e.renderCell(i, n), n.fillStyle = \"red\", n.fill(), n.restore();\n  };\nexport { P as Mesh, M as ResponsiveVoronoi, D as Voronoi, k as computeMesh, b as computeMeshPoints, y as defaultVoronoiProps, S as renderVoronoiCellToCanvas, O as renderVoronoiToCanvas, C as useVoronoi, L as useVoronoiLayerContext, x as useVoronoiMesh };","map":{"version":3,"names":["y","xDomain","yDomain","layers","enableLinks","linkLineWidth","linkLineColor","enableCells","cellLineWidth","cellLineColor","enablePoints","pointSize","pointColor","role","g","getAccessor","n","e","b","computeMeshPoints","points","i","x","o","t","r","l","u","map","k","computeMesh","width","height","debug","h","from","voronoi","delaunay","useVoronoiMesh","a","C","useVoronoi","data","c","domain","range","d","L","useVoronoiLayerContext","w","W","InnerVoronoi","margin","s","v","p","m","D","M","P","O","S","j","z","A","E","H","B","F","I","q","G","outerWidth","J","outerHeight","K","N","innerWidth","Q","innerHeight","R","T","U","V","X","links","cells","bounds","includes","f","stroke","strokeWidth","fill","render","renderPoints","renderBounds","Y","children","Voronoi","theme","Object","keys","length","indexOf","isInteractive","animate","ResponsiveVoronoi","ResponsiveWrapper","Mesh","nodes","onMouseEnter","onMouseMove","onMouseLeave","onClick","current","find","ref","opacity","renderCell","style","cursor","renderVoronoiToCanvas","save","globalAlpha","beginPath","strokeStyle","lineWidth","restore","renderVoronoiCellToCanvas","fillStyle","defaultVoronoiProps"],"sources":["/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/voronoi/src/props.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/voronoi/src/computeMesh.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/voronoi/src/hooks.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/voronoi/src/Voronoi.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/voronoi/src/ResponsiveVoronoi.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/voronoi/src/Mesh.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/voronoi/src/meshCanvas.ts"],"sourcesContent":["import { VoronoiDomain, VoronoiLayer } from './types'\n\nexport const defaultVoronoiProps = {\n    xDomain: [0, 1] as VoronoiDomain,\n    yDomain: [0, 1] as VoronoiDomain,\n    layers: ['links', 'cells', 'points', 'bounds'] as VoronoiLayer[],\n    enableLinks: false,\n    linkLineWidth: 1,\n    linkLineColor: '#bbbbbb',\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#000000',\n    enablePoints: true,\n    pointSize: 4,\n    pointColor: '#666666',\n    role: 'img',\n}\n","import { Delaunay } from 'd3-delaunay'\n\ntype NumberPropertyNames<T> = {\n    [K in keyof T]: T[K] extends number ? K : never\n}[keyof T]\n\nexport type XYAccessor<Datum> = NumberPropertyNames<Datum> | ((datum: Datum) => number)\n\nconst getAccessor = <Datum>(directive: XYAccessor<Datum>) =>\n    typeof directive === 'function' ? directive : (datum: Datum) => datum[directive]\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = <Datum>({\n    points,\n    x = 'x' as NumberPropertyNames<Datum>,\n    y = 'y' as NumberPropertyNames<Datum>,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n}): [number, number][] => {\n    const getX = getAccessor<Datum>(x)\n    const getY = getAccessor<Datum>(y)\n\n    return points.map(point => [getX(point) as number, getY(point) as number])\n}\n\nexport const computeMesh = ({\n    points,\n    width,\n    height,\n    debug,\n}: {\n    points: [number, number][]\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined\n\n    return { delaunay, voronoi }\n}\n","import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport { computeMeshPoints, computeMesh, XYAccessor } from './computeMesh'\nimport { VoronoiCommonProps, VoronoiDatum, VoronoiCustomLayerProps } from './types'\n\nexport const useVoronoiMesh = <Datum>({\n    points,\n    x,\n    y,\n    width,\n    height,\n    debug,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const points2d = useMemo(() => computeMeshPoints<Datum>({ points, x, y }), [points, x, y])\n\n    return useMemo(\n        () => computeMesh({ points: points2d, width, height, debug }),\n        [points2d, width, height, debug]\n    )\n}\n\nexport const useVoronoi = ({\n    data,\n    width,\n    height,\n    xDomain,\n    yDomain,\n}: {\n    data: VoronoiDatum[]\n    width: number\n    height: number\n    xDomain: VoronoiCommonProps['xDomain']\n    yDomain: VoronoiCommonProps['yDomain']\n}) => {\n    const xScale = useMemo(() => scaleLinear().domain(xDomain).range([0, width]), [xDomain, width])\n    const yScale = useMemo(\n        () => scaleLinear().domain(yDomain).range([0, height]),\n        [yDomain, height]\n    )\n\n    const points = useMemo(\n        () =>\n            data.map(d => ({\n                x: xScale(d.x),\n                y: yScale(d.y),\n                data: d,\n            })),\n        [data, xScale, yScale]\n    )\n\n    return useMemo(() => {\n        const delaunay = Delaunay.from(points.map(p => [p.x, p.y]))\n        const voronoi = delaunay.voronoi([0, 0, width, height])\n\n        return {\n            points,\n            delaunay,\n            voronoi,\n        }\n    }, [points, width, height])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useVoronoiLayerContext = ({\n    points,\n    delaunay,\n    voronoi,\n}: VoronoiCustomLayerProps): VoronoiCustomLayerProps =>\n    useMemo(\n        () => ({\n            points,\n            delaunay,\n            voronoi,\n        }),\n        [points, delaunay, voronoi]\n    )\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { VoronoiSvgProps, VoronoiLayerId } from './types'\nimport { defaultVoronoiProps } from './props'\nimport { useVoronoi, useVoronoiLayerContext } from './hooks'\n\ntype InnerVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>\n\nconst InnerVoronoi = ({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    layers = defaultVoronoiProps.layers,\n    xDomain = defaultVoronoiProps.xDomain,\n    yDomain = defaultVoronoiProps.yDomain,\n    enableLinks = defaultVoronoiProps.enableLinks,\n    linkLineWidth = defaultVoronoiProps.linkLineWidth,\n    linkLineColor = defaultVoronoiProps.linkLineColor,\n    enableCells = defaultVoronoiProps.enableCells,\n    cellLineWidth = defaultVoronoiProps.cellLineWidth,\n    cellLineColor = defaultVoronoiProps.cellLineColor,\n    enablePoints = defaultVoronoiProps.enableCells,\n    pointSize = defaultVoronoiProps.pointSize,\n    pointColor = defaultVoronoiProps.pointColor,\n    role = defaultVoronoiProps.role,\n}: InnerVoronoiProps) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { points, delaunay, voronoi } = useVoronoi({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        xDomain,\n        yDomain,\n    })\n\n    const layerById: Record<VoronoiLayerId, ReactNode> = {\n        links: null,\n        cells: null,\n        points: null,\n        bounds: null,\n    }\n\n    if (enableLinks && layers.includes('links')) {\n        layerById.links = (\n            <path\n                key=\"links\"\n                stroke={linkLineColor}\n                strokeWidth={linkLineWidth}\n                fill=\"none\"\n                d={delaunay.render()}\n            />\n        )\n    }\n\n    if (enableCells && layers.includes('cells')) {\n        layerById.cells = (\n            <path\n                key=\"cells\"\n                d={voronoi.render()}\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n            />\n        )\n    }\n\n    if (enablePoints && layers.includes('points')) {\n        layerById.points = (\n            <path\n                key=\"points\"\n                stroke=\"none\"\n                fill={pointColor}\n                d={delaunay.renderPoints(undefined, pointSize / 2)}\n            />\n        )\n    }\n\n    if (layers.includes('bounds')) {\n        layerById.bounds = (\n            <path\n                key=\"bounds\"\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n                d={voronoi.renderBounds()}\n            />\n        )\n    }\n\n    const layerContext = useVoronoiLayerContext({\n        points,\n        delaunay,\n        voronoi,\n    })\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (layerById[layer as VoronoiLayerId] !== undefined) {\n                    return layerById[layer as VoronoiLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Voronoi = ({\n    theme,\n    ...otherProps\n}: Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>) => (\n    <Container isInteractive={false} animate={false} theme={theme}>\n        <InnerVoronoi {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { VoronoiSvgProps } from './types'\nimport { Voronoi } from './Voronoi'\n\ntype ResponsiveVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data'>\n\nexport const ResponsiveVoronoi = (props: ResponsiveVoronoiProps) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Voronoi width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { useRef, useState, useCallback, useMemo } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor } from '@nivo/core'\nimport { useVoronoiMesh } from './hooks'\nimport { XYAccessor } from './computeMesh'\n\ntype MouseHandler<Datum> = (datum: Datum, event: React.MouseEvent) => void\n\ninterface MeshProps<Datum> {\n    nodes: Datum[]\n    width: number\n    height: number\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    onMouseEnter?: MouseHandler<Datum>\n    onMouseMove?: MouseHandler<Datum>\n    onMouseLeave?: MouseHandler<Datum>\n    onClick?: MouseHandler<Datum>\n    debug?: boolean\n}\n\nexport const Mesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    x,\n    y,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    debug,\n}: MeshProps<Datum>) => {\n    const elementRef = useRef<SVGGElement>(null)\n    const [currentIndex, setCurrentIndex] = useState<number | null>(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        x,\n        y,\n        width,\n        height,\n        debug,\n    })\n\n    const voronoiPath = useMemo(() => {\n        if (debug && voronoi) {\n            return voronoi.render()\n        }\n\n        return undefined\n    }, [debug, voronoi])\n\n    const getIndexAndNodeFromEvent = useCallback(\n        event => {\n            if (!elementRef.current) {\n                return [null, null]\n            }\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null] as [number, Datum | null]\n        },\n        [elementRef, delaunay]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseEnter?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseMove?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent) => {\n            setCurrentIndex(null)\n            if (onMouseLeave) {\n                let previousNode: Datum | undefined = undefined\n                if (currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onMouseLeave(previousNode, event)\n            }\n        },\n        [setCurrentIndex, currentIndex, onMouseLeave, nodes]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onClick?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onClick]\n    )\n\n    return (\n        <g ref={elementRef}>\n            {debug && voronoi && (\n                <>\n                    <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />\n                    {/* highlight current cell */}\n                    {currentIndex !== null && (\n                        <path fill=\"pink\" opacity={0.35} d={voronoi.renderCell(currentIndex)} />\n                    )}\n                </>\n            )}\n            {/* transparent rect to intercept mouse events */}\n            <rect\n                width={width}\n                height={height}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        </g>\n    )\n}\n","import { Delaunay, Voronoi } from 'd3-delaunay'\n\nexport const renderVoronoiToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>,\n    index: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'red'\n    ctx.fill()\n\n    ctx.restore()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}