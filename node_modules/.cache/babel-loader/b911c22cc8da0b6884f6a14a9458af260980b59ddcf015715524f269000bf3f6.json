{"ast":null,"code":"import { useMemo as e, useState as i, useCallback as t, createElement as n, Fragment as r, useRef as a, useEffect as o } from \"react\";\nimport { usePropertyAccessor as d, useValueFormatter as l, degreesToRadians as s, radiansToDegrees as c, Container as u, useDimensions as v, bindDefs as f, SvgWrapper as g, ResponsiveWrapper as L, useTheme as h, getRelativeCursor as b } from \"@nivo/core\";\nimport { useArcGenerator as p, computeArcBoundingBox as k, ArcsLayer as A, ArcLinkLabelsLayer as R, ArcLabelsLayer as m, useArcLabels as O, useArcLinkLabels as C, drawCanvasArcLinkLabels as I, drawCanvasArcLabels as x, findArcUnderCursor as M } from \"@nivo/arcs\";\nimport { BoxLegendSvg as y, renderLegendToCanvas as w } from \"@nivo/legends\";\nimport { jsx as W, Fragment as S } from \"react/jsx-runtime\";\nimport { pie as T } from \"d3-shape\";\nimport { useOrdinalColorScale as V, useInheritedColor as B } from \"@nivo/colors\";\nimport { BasicTooltip as G, useTooltip as E } from \"@nivo/tooltip\";\nfunction D() {\n  return D = Object.assign || function (e) {\n    for (var i = 1; i < arguments.length; i++) {\n      var t = arguments[i];\n      for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n    }\n    return e;\n  }, D.apply(this, arguments);\n}\nfunction F(e, i) {\n  if (null == e) return {};\n  var t,\n    n,\n    r = {},\n    a = Object.keys(e);\n  for (n = 0; n < a.length; n++) t = a[n], i.indexOf(t) >= 0 || (r[t] = e[t]);\n  return r;\n}\nvar H,\n  X = function (e) {\n    var i = e.width,\n      t = e.height,\n      n = e.legends,\n      r = e.data,\n      a = e.toggleSerie;\n    return W(S, {\n      children: n.map(function (e, n) {\n        var o;\n        return W(y, D({}, e, {\n          containerWidth: i,\n          containerHeight: t,\n          data: null != (o = e.data) ? o : r,\n          toggleSerie: e.toggleSerie ? a : void 0\n        }), n);\n      })\n    });\n  },\n  Y = {\n    id: \"id\",\n    value: \"value\",\n    sortByValue: !1,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n    layers: [\"arcLinkLabels\", \"arcs\", \"arcLabels\", \"legends\"],\n    startAngle: 0,\n    endAngle: 360,\n    fit: !0,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n    borderWidth: 0,\n    borderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1]]\n    },\n    enableArcLabels: !0,\n    arcLabel: \"formattedValue\",\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: .5,\n    arcLabelsTextColor: {\n      theme: \"labels.text.fill\"\n    },\n    enableArcLinkLabels: !0,\n    arcLinkLabel: \"id\",\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: {\n      theme: \"labels.text.fill\"\n    },\n    arcLinkLabelsColor: {\n      theme: \"axis.ticks.line.stroke\"\n    },\n    colors: {\n      scheme: \"nivo\"\n    },\n    defs: [],\n    fill: [],\n    isInteractive: !0,\n    animate: !0,\n    motionConfig: \"gentle\",\n    transitionMode: \"innerRadius\",\n    tooltip: function (e) {\n      var i = e.datum;\n      return W(G, {\n        id: i.id,\n        value: i.formattedValue,\n        enableChip: !0,\n        color: i.color\n      });\n    },\n    legends: [],\n    role: \"img\",\n    pixelRatio: \"undefined\" != typeof window && null != (H = window.devicePixelRatio) ? H : 1\n  },\n  j = [\"points\"],\n  P = function (i) {\n    var t = i.data,\n      n = i.id,\n      r = void 0 === n ? Y.id : n,\n      a = i.value,\n      o = void 0 === a ? Y.value : a,\n      s = i.valueFormat,\n      c = i.colors,\n      u = void 0 === c ? Y.colors : c,\n      v = d(r),\n      f = d(o),\n      g = l(s),\n      L = V(u, \"id\");\n    return e(function () {\n      return t.map(function (e) {\n        var i,\n          t = v(e),\n          n = f(e),\n          r = {\n            id: t,\n            label: null != (i = e.label) ? i : t,\n            hidden: !1,\n            value: n,\n            formattedValue: g(n),\n            data: e\n          };\n        return D({}, r, {\n          color: L(r)\n        });\n      });\n    }, [t, v, f, g, L]);\n  },\n  q = function (i) {\n    var t = i.data,\n      n = i.startAngle,\n      r = i.endAngle,\n      a = i.innerRadius,\n      o = i.outerRadius,\n      d = i.padAngle,\n      l = i.sortByValue,\n      u = i.activeId,\n      v = i.activeInnerRadiusOffset,\n      f = i.activeOuterRadiusOffset,\n      g = i.hiddenIds,\n      L = e(function () {\n        var e = T().value(function (e) {\n          return e.value;\n        }).startAngle(s(n)).endAngle(s(r)).padAngle(s(d));\n        return l || e.sortValues(null), e;\n      }, [n, r, d, l]);\n    return e(function () {\n      var e = t.filter(function (e) {\n        return !g.includes(e.id);\n      });\n      return {\n        dataWithArc: L(e).map(function (e) {\n          var i = Math.abs(e.endAngle - e.startAngle);\n          return D({}, e.data, {\n            arc: {\n              index: e.index,\n              startAngle: e.startAngle,\n              endAngle: e.endAngle,\n              innerRadius: u === e.data.id ? a - v : a,\n              outerRadius: u === e.data.id ? o + f : o,\n              thickness: o - a,\n              padAngle: e.padAngle,\n              angle: i,\n              angleDeg: c(i)\n            }\n          });\n        }),\n        legendData: t.map(function (e) {\n          return D({}, e, {\n            hidden: g.includes(e.id)\n          });\n        })\n      };\n    }, [L, t, g, u, a, v, o, f]);\n  },\n  z = function (e) {\n    var n = e.data,\n      r = e.radius,\n      a = e.innerRadius,\n      o = e.startAngle,\n      d = void 0 === o ? Y.startAngle : o,\n      l = e.endAngle,\n      c = void 0 === l ? Y.endAngle : l,\n      u = e.padAngle,\n      v = void 0 === u ? Y.padAngle : u,\n      f = e.sortByValue,\n      g = void 0 === f ? Y.sortByValue : f,\n      L = e.cornerRadius,\n      h = void 0 === L ? Y.cornerRadius : L,\n      b = e.activeInnerRadiusOffset,\n      k = void 0 === b ? Y.activeInnerRadiusOffset : b,\n      A = e.activeOuterRadiusOffset,\n      R = void 0 === A ? Y.activeOuterRadiusOffset : A,\n      m = i(null),\n      O = m[0],\n      C = m[1],\n      I = i([]),\n      x = I[0],\n      M = I[1],\n      y = q({\n        data: n,\n        startAngle: d,\n        endAngle: c,\n        innerRadius: a,\n        outerRadius: r,\n        padAngle: v,\n        sortByValue: g,\n        activeId: O,\n        activeInnerRadiusOffset: k,\n        activeOuterRadiusOffset: R,\n        hiddenIds: x\n      }),\n      w = t(function (e) {\n        M(function (i) {\n          return i.indexOf(e) > -1 ? i.filter(function (i) {\n            return i !== e;\n          }) : [].concat(i, [e]);\n        });\n      }, []);\n    return D({}, y, {\n      arcGenerator: p({\n        cornerRadius: h,\n        padAngle: s(v)\n      }),\n      setActiveId: C,\n      toggleSerie: w\n    });\n  },\n  J = function (n) {\n    var r = n.data,\n      a = n.width,\n      o = n.height,\n      d = n.innerRadius,\n      l = void 0 === d ? Y.innerRadius : d,\n      c = n.startAngle,\n      u = void 0 === c ? Y.startAngle : c,\n      v = n.endAngle,\n      f = void 0 === v ? Y.endAngle : v,\n      g = n.padAngle,\n      L = void 0 === g ? Y.padAngle : g,\n      h = n.sortByValue,\n      b = void 0 === h ? Y.sortByValue : h,\n      A = n.cornerRadius,\n      R = void 0 === A ? Y.cornerRadius : A,\n      m = n.fit,\n      O = void 0 === m ? Y.fit : m,\n      C = n.activeInnerRadiusOffset,\n      I = void 0 === C ? Y.activeInnerRadiusOffset : C,\n      x = n.activeOuterRadiusOffset,\n      M = void 0 === x ? Y.activeOuterRadiusOffset : x,\n      y = i(null),\n      w = y[0],\n      W = y[1],\n      S = i([]),\n      T = S[0],\n      V = S[1],\n      B = e(function () {\n        var e,\n          i = Math.min(a, o) / 2,\n          t = i * Math.min(l, 1),\n          n = a / 2,\n          r = o / 2;\n        if (O) {\n          var d = k(n, r, i, u - 90, f - 90),\n            s = d.points,\n            c = F(d, j),\n            v = Math.min(a / c.width, o / c.height),\n            g = {\n              width: c.width * v,\n              height: c.height * v\n            };\n          g.x = (a - g.width) / 2, g.y = (o - g.height) / 2, n = (n - c.x) / c.width * c.width * v + g.x, r = (r - c.y) / c.height * c.height * v + g.y, e = {\n            box: c,\n            ratio: v,\n            points: s\n          }, i *= v, t *= v;\n        }\n        return {\n          centerX: n,\n          centerY: r,\n          radius: i,\n          innerRadius: t,\n          debug: e\n        };\n      }, [a, o, l, u, f, O, R]),\n      G = q({\n        data: r,\n        startAngle: u,\n        endAngle: f,\n        innerRadius: B.innerRadius,\n        outerRadius: B.radius,\n        padAngle: L,\n        sortByValue: b,\n        activeId: w,\n        activeInnerRadiusOffset: I,\n        activeOuterRadiusOffset: M,\n        hiddenIds: T\n      }),\n      E = t(function (e) {\n        V(function (i) {\n          return i.indexOf(e) > -1 ? i.filter(function (i) {\n            return i !== e;\n          }) : [].concat(i, [e]);\n        });\n      }, []);\n    return D({\n      arcGenerator: p({\n        cornerRadius: R,\n        padAngle: s(L)\n      }),\n      setActiveId: W,\n      toggleSerie: E\n    }, G, B);\n  },\n  K = function (i) {\n    var t = i.dataWithArc,\n      n = i.arcGenerator,\n      r = i.centerX,\n      a = i.centerY,\n      o = i.radius,\n      d = i.innerRadius;\n    return e(function () {\n      return {\n        dataWithArc: t,\n        arcGenerator: n,\n        centerX: r,\n        centerY: a,\n        radius: o,\n        innerRadius: d\n      };\n    }, [t, n, r, a, o, d]);\n  },\n  N = function (i) {\n    var t = i.center,\n      r = i.data,\n      a = i.arcGenerator,\n      o = i.borderWidth,\n      d = i.borderColor,\n      l = i.isInteractive,\n      s = i.onClick,\n      c = i.onMouseEnter,\n      u = i.onMouseMove,\n      v = i.onMouseLeave,\n      f = i.setActiveId,\n      g = i.tooltip,\n      L = i.transitionMode,\n      h = E(),\n      b = h.showTooltipFromEvent,\n      p = h.hideTooltip,\n      k = e(function () {\n        if (l) return function (e, i) {\n          null == s || s(e, i);\n        };\n      }, [l, s]),\n      R = e(function () {\n        if (l) return function (e, i) {\n          b(n(g, {\n            datum: e\n          }), i), f(e.id), null == c || c(e, i);\n        };\n      }, [l, b, f, c, g]),\n      m = e(function () {\n        if (l) return function (e, i) {\n          b(n(g, {\n            datum: e\n          }), i), null == u || u(e, i);\n        };\n      }, [l, b, u, g]),\n      O = e(function () {\n        if (l) return function (e, i) {\n          p(), f(null), null == v || v(e, i);\n        };\n      }, [l, p, f, v]);\n    return W(A, {\n      center: t,\n      data: r,\n      arcGenerator: a,\n      borderWidth: o,\n      borderColor: d,\n      transitionMode: L,\n      onClick: k,\n      onMouseEnter: R,\n      onMouseMove: m,\n      onMouseLeave: O\n    });\n  },\n  Q = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  U = function (e) {\n    var i = e.data,\n      t = e.id,\n      a = void 0 === t ? Y.id : t,\n      o = e.value,\n      d = void 0 === o ? Y.value : o,\n      l = e.valueFormat,\n      s = e.sortByValue,\n      c = void 0 === s ? Y.sortByValue : s,\n      u = e.layers,\n      L = void 0 === u ? Y.layers : u,\n      h = e.startAngle,\n      b = void 0 === h ? Y.startAngle : h,\n      p = e.endAngle,\n      k = void 0 === p ? Y.endAngle : p,\n      A = e.padAngle,\n      O = void 0 === A ? Y.padAngle : A,\n      C = e.fit,\n      I = void 0 === C ? Y.fit : C,\n      x = e.innerRadius,\n      M = void 0 === x ? Y.innerRadius : x,\n      y = e.cornerRadius,\n      w = void 0 === y ? Y.cornerRadius : y,\n      S = e.activeInnerRadiusOffset,\n      T = void 0 === S ? Y.activeInnerRadiusOffset : S,\n      V = e.activeOuterRadiusOffset,\n      B = void 0 === V ? Y.activeOuterRadiusOffset : V,\n      G = e.width,\n      E = e.height,\n      D = e.margin,\n      F = e.colors,\n      H = void 0 === F ? Y.colors : F,\n      j = e.borderWidth,\n      q = void 0 === j ? Y.borderWidth : j,\n      z = e.borderColor,\n      Q = void 0 === z ? Y.borderColor : z,\n      U = e.enableArcLabels,\n      Z = void 0 === U ? Y.enableArcLabels : U,\n      $ = e.arcLabel,\n      _ = void 0 === $ ? Y.arcLabel : $,\n      ee = e.arcLabelsSkipAngle,\n      ie = void 0 === ee ? Y.arcLabelsSkipAngle : ee,\n      te = e.arcLabelsTextColor,\n      ne = void 0 === te ? Y.arcLabelsTextColor : te,\n      re = e.arcLabelsRadiusOffset,\n      ae = void 0 === re ? Y.arcLabelsRadiusOffset : re,\n      oe = e.arcLabelsComponent,\n      de = e.enableArcLinkLabels,\n      le = void 0 === de ? Y.enableArcLinkLabels : de,\n      se = e.arcLinkLabel,\n      ce = void 0 === se ? Y.arcLinkLabel : se,\n      ue = e.arcLinkLabelsSkipAngle,\n      ve = void 0 === ue ? Y.arcLinkLabelsSkipAngle : ue,\n      fe = e.arcLinkLabelsOffset,\n      ge = void 0 === fe ? Y.arcLinkLabelsOffset : fe,\n      Le = e.arcLinkLabelsDiagonalLength,\n      he = void 0 === Le ? Y.arcLinkLabelsDiagonalLength : Le,\n      be = e.arcLinkLabelsStraightLength,\n      pe = void 0 === be ? Y.arcLinkLabelsStraightLength : be,\n      ke = e.arcLinkLabelsThickness,\n      Ae = void 0 === ke ? Y.arcLinkLabelsThickness : ke,\n      Re = e.arcLinkLabelsTextOffset,\n      me = void 0 === Re ? Y.arcLinkLabelsTextOffset : Re,\n      Oe = e.arcLinkLabelsTextColor,\n      Ce = void 0 === Oe ? Y.arcLinkLabelsTextColor : Oe,\n      Ie = e.arcLinkLabelsColor,\n      xe = void 0 === Ie ? Y.arcLinkLabelsColor : Ie,\n      Me = e.arcLinkLabelComponent,\n      ye = e.defs,\n      we = void 0 === ye ? Y.defs : ye,\n      We = e.fill,\n      Se = void 0 === We ? Y.fill : We,\n      Te = e.isInteractive,\n      Ve = void 0 === Te ? Y.isInteractive : Te,\n      Be = e.onClick,\n      Ge = e.onMouseEnter,\n      Ee = e.onMouseMove,\n      De = e.onMouseLeave,\n      Fe = e.tooltip,\n      He = void 0 === Fe ? Y.tooltip : Fe,\n      Xe = e.transitionMode,\n      Ye = void 0 === Xe ? Y.transitionMode : Xe,\n      je = e.legends,\n      Pe = void 0 === je ? Y.legends : je,\n      qe = e.role,\n      ze = void 0 === qe ? Y.role : qe,\n      Je = v(G, E, D),\n      Ke = Je.outerWidth,\n      Ne = Je.outerHeight,\n      Qe = Je.margin,\n      Ue = Je.innerWidth,\n      Ze = Je.innerHeight,\n      $e = P({\n        data: i,\n        id: a,\n        value: d,\n        valueFormat: l,\n        colors: H\n      }),\n      _e = J({\n        data: $e,\n        width: Ue,\n        height: Ze,\n        fit: I,\n        innerRadius: M,\n        startAngle: b,\n        endAngle: k,\n        padAngle: O,\n        sortByValue: c,\n        cornerRadius: w,\n        activeInnerRadiusOffset: T,\n        activeOuterRadiusOffset: B\n      }),\n      ei = _e.dataWithArc,\n      ii = _e.legendData,\n      ti = _e.arcGenerator,\n      ni = _e.centerX,\n      ri = _e.centerY,\n      ai = _e.radius,\n      oi = _e.innerRadius,\n      di = _e.setActiveId,\n      li = _e.toggleSerie,\n      si = f(we, ei, Se),\n      ci = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null\n      };\n    le && L.includes(\"arcLinkLabels\") && (ci.arcLinkLabels = W(R, {\n      center: [ni, ri],\n      data: ei,\n      label: ce,\n      skipAngle: ve,\n      offset: ge,\n      diagonalLength: he,\n      straightLength: pe,\n      strokeWidth: Ae,\n      textOffset: me,\n      textColor: Ce,\n      linkColor: xe,\n      component: Me\n    }, \"arcLinkLabels\")), L.includes(\"arcs\") && (ci.arcs = W(N, {\n      center: [ni, ri],\n      data: ei,\n      arcGenerator: ti,\n      borderWidth: q,\n      borderColor: Q,\n      isInteractive: Ve,\n      onClick: Be,\n      onMouseEnter: Ge,\n      onMouseMove: Ee,\n      onMouseLeave: De,\n      setActiveId: di,\n      tooltip: He,\n      transitionMode: Ye\n    }, \"arcs\")), Z && L.includes(\"arcLabels\") && (ci.arcLabels = W(m, {\n      center: [ni, ri],\n      data: ei,\n      label: _,\n      radiusOffset: ae,\n      skipAngle: ie,\n      textColor: ne,\n      transitionMode: Ye,\n      component: oe\n    }, \"arcLabels\")), Pe.length > 0 && L.includes(\"legends\") && (ci.legends = W(X, {\n      width: Ue,\n      height: Ze,\n      data: ii,\n      legends: Pe,\n      toggleSerie: li\n    }, \"legends\"));\n    var ui = K({\n      dataWithArc: ei,\n      arcGenerator: ti,\n      centerX: ni,\n      centerY: ri,\n      radius: ai,\n      innerRadius: oi\n    });\n    return W(g, {\n      width: Ke,\n      height: Ne,\n      margin: Qe,\n      defs: si,\n      role: ze,\n      children: L.map(function (e, i) {\n        return void 0 !== ci[e] ? ci[e] : \"function\" == typeof e ? W(r, {\n          children: n(e, ui)\n        }, i) : null;\n      })\n    });\n  },\n  Z = function (e) {\n    var i = e.isInteractive,\n      t = void 0 === i ? Y.isInteractive : i,\n      n = e.animate,\n      r = void 0 === n ? Y.animate : n,\n      a = e.motionConfig,\n      o = void 0 === a ? Y.motionConfig : a,\n      d = e.theme,\n      l = e.renderWrapper,\n      s = F(e, Q);\n    return W(u, {\n      animate: r,\n      isInteractive: t,\n      motionConfig: o,\n      renderWrapper: l,\n      theme: d,\n      children: W(U, D({\n        isInteractive: t\n      }, s))\n    });\n  },\n  $ = function (e) {\n    return W(L, {\n      children: function (i) {\n        var t = i.width,\n          n = i.height;\n        return W(Z, D({\n          width: t,\n          height: n\n        }, e));\n      }\n    });\n  },\n  _ = [\"isInteractive\", \"theme\", \"renderWrapper\"],\n  ee = function (i) {\n    var t = i.data,\n      r = i.id,\n      d = void 0 === r ? Y.id : r,\n      l = i.value,\n      s = void 0 === l ? Y.value : l,\n      c = i.valueFormat,\n      u = i.sortByValue,\n      f = void 0 === u ? Y.sortByValue : u,\n      g = i.startAngle,\n      L = void 0 === g ? Y.startAngle : g,\n      p = i.endAngle,\n      k = void 0 === p ? Y.endAngle : p,\n      A = i.padAngle,\n      R = void 0 === A ? Y.padAngle : A,\n      m = i.fit,\n      y = void 0 === m ? Y.fit : m,\n      S = i.innerRadius,\n      T = void 0 === S ? Y.innerRadius : S,\n      V = i.cornerRadius,\n      G = void 0 === V ? Y.cornerRadius : V,\n      F = i.activeInnerRadiusOffset,\n      H = void 0 === F ? Y.activeInnerRadiusOffset : F,\n      X = i.activeOuterRadiusOffset,\n      j = void 0 === X ? Y.activeOuterRadiusOffset : X,\n      q = i.width,\n      z = i.height,\n      K = i.margin,\n      N = i.pixelRatio,\n      Q = void 0 === N ? 1 : N,\n      U = i.colors,\n      Z = void 0 === U ? Y.colors : U,\n      $ = i.borderWidth,\n      _ = void 0 === $ ? Y.borderWidth : $,\n      ee = i.borderColor,\n      ie = void 0 === ee ? Y.borderColor : ee,\n      te = i.enableArcLabels,\n      ne = void 0 === te ? Y.enableArcLabels : te,\n      re = i.arcLabel,\n      ae = void 0 === re ? Y.arcLabel : re,\n      oe = i.arcLabelsSkipAngle,\n      de = void 0 === oe ? Y.arcLabelsSkipAngle : oe,\n      le = i.arcLabelsTextColor,\n      se = void 0 === le ? Y.arcLabelsTextColor : le,\n      ce = i.arcLabelsRadiusOffset,\n      ue = void 0 === ce ? Y.arcLabelsRadiusOffset : ce,\n      ve = i.enableArcLinkLabels,\n      fe = void 0 === ve ? Y.enableArcLinkLabels : ve,\n      ge = i.arcLinkLabel,\n      Le = void 0 === ge ? Y.arcLinkLabel : ge,\n      he = i.arcLinkLabelsSkipAngle,\n      be = void 0 === he ? Y.arcLinkLabelsSkipAngle : he,\n      pe = i.arcLinkLabelsOffset,\n      ke = void 0 === pe ? Y.arcLinkLabelsOffset : pe,\n      Ae = i.arcLinkLabelsDiagonalLength,\n      Re = void 0 === Ae ? Y.arcLinkLabelsDiagonalLength : Ae,\n      me = i.arcLinkLabelsStraightLength,\n      Oe = void 0 === me ? Y.arcLinkLabelsStraightLength : me,\n      Ce = i.arcLinkLabelsThickness,\n      Ie = void 0 === Ce ? Y.arcLinkLabelsThickness : Ce,\n      xe = i.arcLinkLabelsTextOffset,\n      Me = void 0 === xe ? Y.arcLinkLabelsTextOffset : xe,\n      ye = i.arcLinkLabelsTextColor,\n      we = void 0 === ye ? Y.arcLinkLabelsTextColor : ye,\n      We = i.arcLinkLabelsColor,\n      Se = void 0 === We ? Y.arcLinkLabelsColor : We,\n      Te = i.isInteractive,\n      Ve = void 0 === Te ? Y.isInteractive : Te,\n      Be = i.onClick,\n      Ge = i.onMouseMove,\n      Ee = i.tooltip,\n      De = void 0 === Ee ? Y.tooltip : Ee,\n      Fe = i.legends,\n      He = void 0 === Fe ? Y.legends : Fe,\n      Xe = a(null),\n      Ye = h(),\n      je = v(q, z, K),\n      Pe = je.margin,\n      qe = je.innerWidth,\n      ze = je.innerHeight,\n      Je = je.outerWidth,\n      Ke = je.outerHeight,\n      Ne = P({\n        data: t,\n        id: d,\n        value: s,\n        valueFormat: c,\n        colors: Z\n      }),\n      Qe = J({\n        data: Ne,\n        width: qe,\n        height: ze,\n        fit: y,\n        innerRadius: T,\n        startAngle: L,\n        endAngle: k,\n        padAngle: R,\n        sortByValue: f,\n        cornerRadius: G,\n        activeInnerRadiusOffset: H,\n        activeOuterRadiusOffset: j\n      }),\n      Ue = Qe.dataWithArc,\n      Ze = Qe.arcGenerator,\n      $e = Qe.centerX,\n      _e = Qe.centerY,\n      ei = Qe.radius,\n      ii = Qe.innerRadius,\n      ti = Qe.setActiveId,\n      ni = B(ie, Ye),\n      ri = O({\n        data: Ue,\n        label: ae,\n        skipAngle: de,\n        offset: ue,\n        textColor: se\n      }),\n      ai = C({\n        data: Ue,\n        skipAngle: be,\n        offset: ke,\n        diagonalLength: Re,\n        straightLength: Oe,\n        label: Le,\n        linkColor: Se,\n        textOffset: Me,\n        textColor: we\n      });\n    o(function () {\n      if (Xe.current) {\n        Xe.current.width = Je * Q, Xe.current.height = Ke * Q;\n        var e = Xe.current.getContext(\"2d\");\n        e.scale(Q, Q), e.fillStyle = Ye.background, e.fillRect(0, 0, Je, Ke), e.save(), e.translate(Pe.left, Pe.top), Ze.context(e), e.save(), e.translate($e, _e), Ue.forEach(function (i) {\n          e.beginPath(), e.fillStyle = i.color, e.strokeStyle = ni(i), e.lineWidth = _, Ze(i.arc), e.fill(), _ > 0 && e.stroke();\n        }), !0 === fe && I(e, ai, Ye, Ie), !0 === ne && x(e, ri, Ye), e.restore(), He.forEach(function (i) {\n          w(e, D({}, i, {\n            data: Ue,\n            containerWidth: qe,\n            containerHeight: ze,\n            theme: Ye\n          }));\n        });\n      }\n    }, [Xe, qe, ze, Je, Ke, Pe.top, Pe.left, Q, $e, _e, Ze, Ue, ni, ne, ri, fe, ai, Ie, He, Ye]);\n    var oi = e(function () {\n        return Ue.map(function (e) {\n          return D({\n            id: e.id\n          }, e.arc);\n        });\n      }, [Ue]),\n      di = function (e) {\n        if (!Xe.current) return null;\n        var i = b(Xe.current, e),\n          t = i[0],\n          n = i[1],\n          r = M(Pe.left + $e, Pe.top + _e, ei, ii, oi, t, n);\n        return r ? Ue.find(function (e) {\n          return e.id === r.id;\n        }) : null;\n      },\n      li = E(),\n      si = li.showTooltipFromEvent,\n      ci = li.hideTooltip,\n      ui = function (e) {\n        var i = di(e);\n        i ? (null == Ge || Ge(i, e), ti(i.id), si(n(De, {\n          datum: i\n        }), e)) : (ti(null), ci());\n      };\n    return W(\"canvas\", {\n      ref: Xe,\n      width: Je * Q,\n      height: Ke * Q,\n      style: {\n        width: Je,\n        height: Ke,\n        cursor: Ve ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: Ve ? ui : void 0,\n      onMouseMove: Ve ? ui : void 0,\n      onMouseLeave: Ve ? function () {\n        ci();\n      } : void 0,\n      onClick: Ve ? function (e) {\n        if (Be) {\n          var i = di(e);\n          i && Be(i, e);\n        }\n      } : void 0\n    });\n  },\n  ie = function (e) {\n    var i = e.isInteractive,\n      t = void 0 === i ? Y.isInteractive : i,\n      n = e.theme,\n      r = e.renderWrapper,\n      a = F(e, _);\n    return W(u, {\n      isInteractive: t,\n      renderWrapper: r,\n      theme: n,\n      children: W(ee, D({\n        isInteractive: t\n      }, a))\n    });\n  },\n  te = function (e) {\n    return W(L, {\n      children: function (i) {\n        var t = i.width,\n          n = i.height;\n        return W(ie, D({\n          width: t,\n          height: n\n        }, e));\n      }\n    });\n  };\nexport { Z as Pie, ie as PieCanvas, $ as ResponsivePie, te as ResponsivePieCanvas, Y as defaultProps, P as useNormalizedData, z as usePie, q as usePieArcs, J as usePieFromBox, K as usePieLayerContext };","map":{"version":3,"names":["H","X","PieLegends","e","i","width","t","height","n","legends","r","data","a","toggleSerie","W","S","children","map","o","y","D","containerWidth","containerHeight","Y","id","value","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","fill","isInteractive","animate","motionConfig","transitionMode","tooltip","datum","G","formattedValue","enableChip","color","role","pixelRatio","window","devicePixelRatio","j","P","useNormalizedData","s","valueFormat","c","u","v","d","f","g","l","L","V","label","hidden","q","usePieArcs","outerRadius","activeId","hiddenIds","T","sortValues","filter","includes","dataWithArc","Math","abs","arc","index","thickness","angle","angleDeg","legendData","z","usePie","radius","h","b","k","A","R","m","O","C","I","x","M","w","indexOf","concat","arcGenerator","p","setActiveId","J","usePieFromBox","B","min","points","F","box","ratio","centerX","centerY","debug","E","K","usePieLayerContext","N","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","showTooltipFromEvent","hideTooltip","Q","U","InnerPie","margin","Z","$","_","ee","ie","te","ne","re","ae","oe","arcLabelsComponent","de","le","se","ce","ue","ve","fe","ge","Le","he","be","pe","ke","Ae","Re","me","Oe","Ce","Ie","xe","Me","arcLinkLabelComponent","ye","we","We","Se","Te","Ve","Be","Ge","Ee","De","Fe","He","Xe","Ye","je","Pe","qe","ze","Je","Ke","outerWidth","Ne","outerHeight","Qe","Ue","innerWidth","Ze","innerHeight","$e","_e","ei","ii","ti","ni","ri","ai","oi","di","li","si","ci","arcLinkLabels","arcs","arcLabels","skipAngle","offset","diagonalLength","straightLength","strokeWidth","textOffset","textColor","linkColor","component","radiusOffset","length","ui","Pie","renderWrapper","ResponsivePie","ResponsiveWrapper","InnerPieCanvas","current","getContext","scale","fillStyle","background","fillRect","save","translate","left","top","context","forEach","beginPath","strokeStyle","lineWidth","stroke","restore","getArcFromMouse","find","handleMouseHover","ref","style","cursor","PieCanvas","ResponsivePieCanvas","defaultProps"],"sources":["/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/pie/src/PieLegends.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/pie/src/props.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/pie/src/PieTooltip.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/pie/src/hooks.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/pie/src/Arcs.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/pie/src/Pie.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/pie/src/ResponsivePie.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/pie/src/PieCanvas.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/pie/src/ResponsivePieCanvas.tsx"],"sourcesContent":["import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum, DatumId } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { useCallback, useMemo, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport { CompletePieSvgProps, ComputedDatum, DatumId, PieArc, PieCustomLayerProps } from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData = data.map(item => ({ ...item, hidden: hiddenIds.includes(item.id) }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const [activeId, setActiveId] = useState<DatumId | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const [activeId, setActiveId] = useState<string | number | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter, tooltip])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove, tooltip])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { createElement, useEffect, useMemo, useRef } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor, useDimensions, useTheme, Container } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius, setActiveId } =\n        usePieFromBox<RawDatum>({\n            data: normalizedData,\n            width: innerWidth,\n            height: innerHeight,\n            fit,\n            innerRadius: innerRadiusRatio,\n            startAngle,\n            endAngle,\n            padAngle,\n            sortByValue,\n            cornerRadius,\n            activeInnerRadiusOffset,\n            activeOuterRadiusOffset,\n        })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const PieCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerPieCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum,>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}