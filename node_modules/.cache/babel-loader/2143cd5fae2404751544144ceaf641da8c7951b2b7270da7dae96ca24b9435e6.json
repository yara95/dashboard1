{"ast":null,"code":"import { Axes as e, Grid as a, renderGridLinesToCanvas as i, renderAxesToCanvas as t } from \"@nivo/axes\";\nimport { useAnnotations as n, Annotation as r, useComputedAnnotations as l, renderAnnotationsToCanvas as o } from \"@nivo/annotations\";\nimport { jsx as d, Fragment as u, jsxs as c } from \"react/jsx-runtime\";\nimport { BoxLegendSvg as s, renderLegendToCanvas as h } from \"@nivo/legends\";\nimport { useTheme as b, getPropertyAccessor as g, usePropertyAccessor as v, useValueFormatter as f, Container as m, useMotionConfig as p, useDimensions as x, bindDefs as y, CartesianMarkers as S, SvgWrapper as k, getRelativeCursor as L, isCursorInRect as w, ResponsiveWrapper as C } from \"@nivo/core\";\nimport { useMemo as V, createElement as W, useCallback as M, useState as B, Fragment as I, forwardRef as T, useRef as R, useEffect as H } from \"react\";\nimport { animated as P, to as E, useTransition as F } from \"@react-spring/web\";\nimport { useTooltip as X, BasicTooltip as Y } from \"@nivo/tooltip\";\nimport { useOrdinalColorScale as D, useInheritedColor as O } from \"@nivo/colors\";\nimport { computeScale as G } from \"@nivo/scales\";\nimport { stack as A, stackOffsetDiverging as j } from \"d3-shape\";\nimport q from \"lodash/uniqBy\";\nfunction z() {\n  return z = Object.assign || function (e) {\n    for (var a = 1; a < arguments.length; a++) {\n      var i = arguments[a];\n      for (var t in i) Object.prototype.hasOwnProperty.call(i, t) && (e[t] = i[t]);\n    }\n    return e;\n  }, z.apply(this, arguments);\n}\nfunction K(e, a) {\n  if (null == e) return {};\n  var i,\n    t,\n    n = {},\n    r = Object.keys(e);\n  for (t = 0; t < r.length; t++) i = r[t], a.indexOf(i) >= 0 || (n[i] = e[i]);\n  return n;\n}\nvar N,\n  J = function (e) {\n    var a = e.bars,\n      i = e.annotations,\n      t = n({\n        data: a,\n        annotations: i,\n        getPosition: function (e) {\n          return {\n            x: e.x + e.width / 2,\n            y: e.y + e.height / 2\n          };\n        },\n        getDimensions: function (e) {\n          var a = e.height,\n            i = e.width;\n          return {\n            width: i,\n            height: a,\n            size: Math.max(i, a)\n          };\n        }\n      });\n    return d(u, {\n      children: t.map(function (e, a) {\n        return d(r, z({}, e), a);\n      })\n    });\n  },\n  Q = function (e) {\n    var a = e.width,\n      i = e.height,\n      t = e.legends,\n      n = e.toggleSerie;\n    return d(u, {\n      children: t.map(function (e, t) {\n        var r,\n          l = e[0],\n          o = e[1];\n        return d(s, z({}, l, {\n          containerWidth: a,\n          containerHeight: i,\n          data: null != (r = l.data) ? r : o,\n          toggleSerie: l.toggleSerie && \"keys\" === l.dataFrom ? n : void 0\n        }), t);\n      })\n    });\n  },\n  U = [\"data\"],\n  Z = function (e) {\n    var a,\n      i = e.bar,\n      t = i.data,\n      n = K(i, U),\n      r = e.style,\n      l = r.borderColor,\n      o = r.color,\n      u = r.height,\n      s = r.labelColor,\n      h = r.labelOpacity,\n      g = r.labelX,\n      v = r.labelY,\n      f = r.transform,\n      m = r.width,\n      p = e.borderRadius,\n      x = e.borderWidth,\n      y = e.label,\n      S = e.shouldRenderLabel,\n      k = e.isInteractive,\n      L = e.onClick,\n      w = e.onMouseEnter,\n      C = e.onMouseLeave,\n      B = e.tooltip,\n      I = e.isFocusable,\n      T = e.ariaLabel,\n      R = e.ariaLabelledBy,\n      H = e.ariaDescribedBy,\n      F = b(),\n      Y = X(),\n      D = Y.showTooltipFromEvent,\n      O = Y.showTooltipAt,\n      G = Y.hideTooltip,\n      A = V(function () {\n        return function () {\n          return W(B, z({}, n, t));\n        };\n      }, [B, n, t]),\n      j = M(function (e) {\n        null == L || L(z({\n          color: n.color\n        }, t), e);\n      }, [n, t, L]),\n      q = M(function (e) {\n        return D(A(), e);\n      }, [D, A]),\n      N = M(function (e) {\n        null == w || w(t, e), D(A(), e);\n      }, [t, w, D, A]),\n      J = M(function (e) {\n        null == C || C(t, e), G();\n      }, [t, G, C]),\n      Q = M(function () {\n        O(A(), [n.absX + n.width / 2, n.absY]);\n      }, [O, A, n]),\n      Z = M(function () {\n        G();\n      }, [G]);\n    return c(P.g, {\n      transform: f,\n      children: [d(P.rect, {\n        width: E(m, function (e) {\n          return Math.max(e, 0);\n        }),\n        height: E(u, function (e) {\n          return Math.max(e, 0);\n        }),\n        rx: p,\n        ry: p,\n        fill: null != (a = t.fill) ? a : o,\n        strokeWidth: x,\n        stroke: l,\n        focusable: I,\n        tabIndex: I ? 0 : void 0,\n        \"aria-label\": T ? T(t) : void 0,\n        \"aria-labelledby\": R ? R(t) : void 0,\n        \"aria-describedby\": H ? H(t) : void 0,\n        onMouseEnter: k ? N : void 0,\n        onMouseMove: k ? q : void 0,\n        onMouseLeave: k ? J : void 0,\n        onClick: k ? j : void 0,\n        onFocus: k && I ? Q : void 0,\n        onBlur: k && I ? Z : void 0\n      }), S && d(P.text, {\n        x: g,\n        y: v,\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        fillOpacity: h,\n        style: z({}, F.labels.text, {\n          pointerEvents: \"none\",\n          fill: s\n        }),\n        children: y\n      })]\n    });\n  },\n  $ = [\"color\", \"label\"],\n  _ = {\n    indexBy: \"id\",\n    keys: [\"value\"],\n    groupMode: \"stacked\",\n    layout: \"vertical\",\n    reverse: !1,\n    minValue: \"auto\",\n    maxValue: \"auto\",\n    valueScale: {\n      type: \"linear\"\n    },\n    indexScale: {\n      type: \"band\",\n      round: !0\n    },\n    padding: .1,\n    innerPadding: 0,\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: !1,\n    enableGridY: !0,\n    enableLabel: !0,\n    label: \"formattedValue\",\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: {\n      from: \"theme\",\n      theme: \"labels.text.fill\"\n    },\n    colorBy: \"id\",\n    colors: {\n      scheme: \"nivo\"\n    },\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: {\n      from: \"color\"\n    },\n    isInteractive: !0,\n    tooltip: function (e) {\n      var a = e.color,\n        i = e.label,\n        t = K(e, $);\n      return d(Y, {\n        id: i,\n        value: t.formattedValue,\n        enableChip: !0,\n        color: a\n      });\n    },\n    tooltipLabel: function (e) {\n      return e.id + \" - \" + e.indexValue;\n    },\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: []\n  },\n  ee = z({}, _, {\n    layers: [\"grid\", \"axes\", \"bars\", \"markers\", \"legends\", \"annotations\"],\n    barComponent: Z,\n    defs: [],\n    fill: [],\n    animate: !0,\n    motionConfig: \"default\",\n    role: \"img\",\n    isFocusable: !1\n  }),\n  ae = z({}, _, {\n    layers: [\"grid\", \"axes\", \"bars\", \"legends\", \"annotations\"],\n    pixelRatio: \"undefined\" != typeof window && null != (N = window.devicePixelRatio) ? N : 1\n  }),\n  ie = function (e, a, i, t, n, r) {\n    return G(t, {\n      all: e.map(a),\n      min: 0,\n      max: 0\n    }, n, r).padding(i);\n  },\n  te = function (e, a) {\n    return e.map(function (e) {\n      return z({}, a.reduce(function (e, a) {\n        return e[a] = null, e;\n      }, {}), e);\n    });\n  },\n  ne = function (e) {\n    return Object.keys(e).reduce(function (a, i) {\n      return e[i] && (a[i] = e[i]), a;\n    }, {});\n  },\n  re = function (e) {\n    return [e, Number(e)];\n  },\n  le = [\"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"innerPadding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  oe = function (e, a) {\n    return e > a;\n  },\n  de = function (e, a) {\n    return e < a;\n  },\n  ue = function (e, a) {\n    return Array.from(\" \".repeat(a - e), function (a, i) {\n      return e + i;\n    });\n  },\n  ce = function (e) {\n    return oe(e, 0) ? 0 : e;\n  },\n  se = function (e, a, i, t) {\n    var n = e.data,\n      r = e.formatValue,\n      l = e.getColor,\n      o = e.getIndex,\n      d = e.getTooltipLabel,\n      u = e.innerPadding,\n      c = void 0 === u ? 0 : u,\n      s = e.keys,\n      h = e.xScale,\n      b = e.yScale,\n      g = e.margin,\n      v = i ? de : oe,\n      f = n.map(ne),\n      m = [];\n    return s.forEach(function (e, i) {\n      return ue(0, h.domain().length).forEach(function (u) {\n        var s,\n          p,\n          x,\n          y = re(n[u][e]),\n          S = y[0],\n          k = y[1],\n          L = o(n[u]),\n          w = (null != (s = h(L)) ? s : 0) + a * i + c * i,\n          C = v(p = k, 0) ? null != (x = b(p)) ? x : 0 : t,\n          V = function (e, a) {\n            var i;\n            return v(e, 0) ? t - a : (null != (i = b(e)) ? i : 0) - t;\n          }(k, C),\n          W = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: r(k),\n            hidden: !1,\n            index: u,\n            indexValue: L,\n            data: f[u]\n          };\n        m.push({\n          key: e + \".\" + W.indexValue,\n          index: m.length,\n          data: W,\n          x: w,\n          y: C,\n          absX: g.left + w,\n          absY: g.top + C,\n          width: a,\n          height: V,\n          color: l(W),\n          label: d(W)\n        });\n      });\n    }), m;\n  },\n  he = function (e, a, i, t) {\n    var n = e.data,\n      r = e.formatValue,\n      l = e.getIndex,\n      o = e.getColor,\n      d = e.getTooltipLabel,\n      u = e.keys,\n      c = e.innerPadding,\n      s = void 0 === c ? 0 : c,\n      h = e.xScale,\n      b = e.yScale,\n      g = e.margin,\n      v = i ? de : oe,\n      f = n.map(ne),\n      m = [];\n    return u.forEach(function (e, i) {\n      return ue(0, b.domain().length).forEach(function (u) {\n        var c,\n          p,\n          x,\n          y = re(n[u][e]),\n          S = y[0],\n          k = y[1],\n          L = l(n[u]),\n          w = v(p = k, 0) ? t : null != (x = h(p)) ? x : 0,\n          C = (null != (c = b(L)) ? c : 0) + a * i + s * i,\n          V = function (e, a) {\n            var i;\n            return v(e, 0) ? (null != (i = h(e)) ? i : 0) - t : t - a;\n          }(k, w),\n          W = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: r(k),\n            hidden: !1,\n            index: u,\n            indexValue: L,\n            data: f[u]\n          };\n        m.push({\n          key: e + \".\" + W.indexValue,\n          index: m.length,\n          data: W,\n          x: w,\n          y: C,\n          absX: g.left + w,\n          absY: g.top + C,\n          width: V,\n          height: a,\n          color: o(W),\n          label: d(W)\n        });\n      });\n    }), m;\n  },\n  be = function (e) {\n    var a,\n      i,\n      t = e.layout,\n      n = e.minValue,\n      r = e.maxValue,\n      l = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.innerPadding,\n      h = void 0 === s ? 0 : s,\n      b = e.valueScale,\n      g = e.indexScale,\n      v = e.hiddenIds,\n      f = void 0 === v ? [] : v,\n      m = K(e, le),\n      p = m.keys.filter(function (e) {\n        return !f.includes(e);\n      }),\n      x = te(m.data, p),\n      y = \"vertical\" === t ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      S = y[0],\n      k = y[1],\n      L = y[2],\n      w = ie(x, m.getIndex, c, g, L, k),\n      C = z({\n        max: r,\n        min: n,\n        reverse: l\n      }, b),\n      V = \"auto\" === C.min ? ce : function (e) {\n        return e;\n      },\n      W = x.reduce(function (e, a) {\n        return [].concat(e, p.map(function (e) {\n          return a[e];\n        }));\n      }, []).filter(Boolean),\n      M = V(Math.min.apply(Math, W)),\n      B = (i = Math.max.apply(Math, W), isFinite(i) ? i : 0),\n      I = G(C, {\n        all: W,\n        min: M,\n        max: B\n      }, \"x\" === S ? o : d, S),\n      T = \"vertical\" === t ? [w, I] : [I, w],\n      R = T[0],\n      H = T[1],\n      P = (w.bandwidth() - h * (p.length - 1)) / p.length,\n      E = [z({}, m, {\n        data: x,\n        keys: p,\n        innerPadding: h,\n        xScale: R,\n        yScale: H\n      }), P, C.reverse, null != (a = I(0)) ? a : 0];\n    return {\n      xScale: R,\n      yScale: H,\n      bars: P > 0 ? \"vertical\" === t ? se.apply(void 0, E) : he.apply(void 0, E) : []\n    };\n  },\n  ge = [\"data\", \"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  ve = function e(a) {\n    var i;\n    return a.some(Array.isArray) ? e((i = []).concat.apply(i, a)) : a;\n  },\n  fe = function (e, a, i) {\n    var t = e.formatValue,\n      n = e.getColor,\n      r = e.getIndex,\n      l = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return u.domain().forEach(function (d, b) {\n        var g,\n          v,\n          f = e[b],\n          m = null != (g = u(r(f.data))) ? g : 0,\n          p = (null != (v = function (e) {\n            return c(e[i ? 0 : 1]);\n          }(f)) ? v : 0) + .5 * o,\n          x = function (e, a) {\n            var t;\n            return (null != (t = c(e[i ? 1 : 0])) ? t : 0) - a;\n          }(f, p) - o,\n          y = re(f.data[e.key]),\n          S = y[0],\n          k = y[1],\n          L = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: t(k),\n            hidden: !1,\n            index: b,\n            indexValue: d,\n            data: ne(f.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: L,\n          x: m,\n          y: p,\n          absX: s.left + m,\n          absY: s.top + p,\n          width: a,\n          height: x,\n          color: n(L),\n          label: l(L)\n        });\n      });\n    }), h;\n  },\n  me = function (e, a, i) {\n    var t = e.formatValue,\n      n = e.getColor,\n      r = e.getIndex,\n      l = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return c.domain().forEach(function (d, b) {\n        var g,\n          v,\n          f = e[b],\n          m = null != (g = c(r(f.data))) ? g : 0,\n          p = (null != (v = function (e) {\n            return u(e[i ? 1 : 0]);\n          }(f)) ? v : 0) + .5 * o,\n          x = function (e, a) {\n            var t;\n            return (null != (t = u(e[i ? 0 : 1])) ? t : 0) - a;\n          }(f, p) - o,\n          y = re(f.data[e.key]),\n          S = y[0],\n          k = y[1],\n          L = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: t(k),\n            hidden: !1,\n            index: b,\n            indexValue: d,\n            data: ne(f.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: L,\n          x: p,\n          y: m,\n          absX: s.left + p,\n          absY: s.top + m,\n          width: x,\n          height: a,\n          color: n(L),\n          label: l(L)\n        });\n      });\n    }), h;\n  },\n  pe = function (e) {\n    var a,\n      i = e.data,\n      t = e.layout,\n      n = e.minValue,\n      r = e.maxValue,\n      l = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.valueScale,\n      h = e.indexScale,\n      b = e.hiddenIds,\n      g = void 0 === b ? [] : b,\n      v = K(e, ge),\n      f = v.keys.filter(function (e) {\n        return !g.includes(e);\n      }),\n      m = A().keys(f).offset(j)(te(i, f)),\n      p = \"vertical\" === t ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      x = p[0],\n      y = p[1],\n      S = p[2],\n      k = ie(i, v.getIndex, c, h, S, y),\n      L = z({\n        max: r,\n        min: n,\n        reverse: l\n      }, s),\n      w = (a = ve(m), \"log\" === s.type ? a.filter(function (e) {\n        return 0 !== e;\n      }) : a),\n      C = Math.min.apply(Math, w),\n      V = Math.max.apply(Math, w),\n      W = G(L, {\n        all: w,\n        min: C,\n        max: V\n      }, \"x\" === x ? o : d, x),\n      M = \"vertical\" === t ? [k, W] : [W, k],\n      B = M[0],\n      I = M[1],\n      T = v.innerPadding > 0 ? v.innerPadding : 0,\n      R = k.bandwidth(),\n      H = [z({}, v, {\n        innerPadding: T,\n        stackedData: m,\n        xScale: B,\n        yScale: I\n      }), R, L.reverse];\n    return {\n      xScale: B,\n      yScale: I,\n      bars: R > 0 ? \"vertical\" === t ? fe.apply(void 0, H) : me.apply(void 0, H) : []\n    };\n  },\n  xe = function (e) {\n    var a = e.bars,\n      i = e.direction,\n      t = e.from,\n      n = e.groupMode,\n      r = e.layout,\n      l = e.legendLabel,\n      o = e.reverse,\n      d = g(null != l ? l : \"indexes\" === t ? \"indexValue\" : \"id\");\n    return \"indexes\" === t ? function (e, a, i) {\n      var t = q(e.map(function (e) {\n        var a, t;\n        return {\n          id: null != (a = e.data.indexValue) ? a : \"\",\n          label: i(e.data),\n          hidden: e.data.hidden,\n          color: null != (t = e.color) ? t : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return \"horizontal\" === a && t.reverse(), t;\n    }(a, r, d) : function (e, a, i, t, n, r) {\n      var l = q(e.map(function (e) {\n        var a;\n        return {\n          id: e.data.id,\n          label: r(e.data),\n          hidden: e.data.hidden,\n          color: null != (a = e.color) ? a : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return (\"vertical\" === a && \"stacked\" === t && \"column\" === i && !0 !== n || \"horizontal\" === a && \"stacked\" === t && !0 === n) && l.reverse(), l;\n    }(a, r, i, n, o, d);\n  },\n  ye = function (e) {\n    var a = e.indexBy,\n      i = void 0 === a ? _.indexBy : a,\n      t = e.keys,\n      n = void 0 === t ? _.keys : t,\n      r = e.label,\n      l = void 0 === r ? _.label : r,\n      o = e.tooltipLabel,\n      d = void 0 === o ? _.tooltipLabel : o,\n      u = e.valueFormat,\n      c = e.colors,\n      s = void 0 === c ? _.colors : c,\n      h = e.colorBy,\n      g = void 0 === h ? _.colorBy : h,\n      m = e.borderColor,\n      p = void 0 === m ? _.borderColor : m,\n      x = e.labelTextColor,\n      y = void 0 === x ? _.labelTextColor : x,\n      S = e.groupMode,\n      k = void 0 === S ? _.groupMode : S,\n      L = e.layout,\n      w = void 0 === L ? _.layout : L,\n      C = e.reverse,\n      W = void 0 === C ? _.reverse : C,\n      I = e.data,\n      T = e.minValue,\n      R = void 0 === T ? _.minValue : T,\n      H = e.maxValue,\n      P = void 0 === H ? _.maxValue : H,\n      E = e.margin,\n      F = e.width,\n      X = e.height,\n      Y = e.padding,\n      G = void 0 === Y ? _.padding : Y,\n      A = e.innerPadding,\n      j = void 0 === A ? _.innerPadding : A,\n      q = e.valueScale,\n      K = void 0 === q ? _.valueScale : q,\n      N = e.indexScale,\n      J = void 0 === N ? _.indexScale : N,\n      Q = e.initialHiddenIds,\n      U = void 0 === Q ? _.initialHiddenIds : Q,\n      Z = e.enableLabel,\n      $ = void 0 === Z ? _.enableLabel : Z,\n      ee = e.labelSkipWidth,\n      ae = void 0 === ee ? _.labelSkipWidth : ee,\n      ie = e.labelSkipHeight,\n      te = void 0 === ie ? _.labelSkipHeight : ie,\n      ne = e.legends,\n      re = void 0 === ne ? _.legends : ne,\n      le = e.legendLabel,\n      oe = B(null != U ? U : []),\n      de = oe[0],\n      ue = oe[1],\n      ce = M(function (e) {\n        ue(function (a) {\n          return a.indexOf(e) > -1 ? a.filter(function (a) {\n            return a !== e;\n          }) : [].concat(a, [e]);\n        });\n      }, []),\n      se = v(i),\n      he = v(l),\n      ge = v(d),\n      ve = f(u),\n      fe = b(),\n      me = D(s, g),\n      ye = O(p, fe),\n      Se = O(y, fe),\n      ke = (\"grouped\" === k ? be : pe)({\n        layout: w,\n        reverse: W,\n        data: I,\n        getIndex: se,\n        keys: n,\n        minValue: R,\n        maxValue: P,\n        width: F,\n        height: X,\n        getColor: me,\n        padding: G,\n        innerPadding: j,\n        valueScale: K,\n        indexScale: J,\n        hiddenIds: de,\n        formatValue: ve,\n        getTooltipLabel: ge,\n        margin: E\n      }),\n      Le = ke.bars,\n      we = ke.xScale,\n      Ce = ke.yScale,\n      Ve = V(function () {\n        return Le.filter(function (e) {\n          return null !== e.data.value;\n        }).map(function (e, a) {\n          return z({}, e, {\n            index: a\n          });\n        });\n      }, [Le]),\n      We = M(function (e) {\n        var a = e.width,\n          i = e.height;\n        return !!$ && !(ae > 0 && a < ae) && !(te > 0 && i < te);\n      }, [$, ae, te]),\n      Me = V(function () {\n        return n.map(function (e) {\n          var a = Le.find(function (a) {\n            return a.data.id === e;\n          });\n          return z({}, a, {\n            data: z({\n              id: e\n            }, null == a ? void 0 : a.data, {\n              hidden: de.includes(e)\n            })\n          });\n        });\n      }, [de, n, Le]),\n      Be = V(function () {\n        return re.map(function (e) {\n          return [e, xe({\n            bars: \"keys\" === e.dataFrom ? Me : Le,\n            direction: e.direction,\n            from: e.dataFrom,\n            groupMode: k,\n            layout: w,\n            legendLabel: le,\n            reverse: W\n          })];\n        });\n      }, [re, Me, Le, k, w, le, W]);\n    return {\n      bars: Le,\n      barsWithValue: Ve,\n      xScale: we,\n      yScale: Ce,\n      getIndex: se,\n      getLabel: he,\n      getTooltipLabel: ge,\n      formatValue: ve,\n      getColor: me,\n      getBorderColor: ye,\n      getLabelColor: Se,\n      shouldRenderBarLabel: We,\n      hiddenIds: de,\n      toggleSerie: ce,\n      legendsWithData: Be\n    };\n  },\n  Se = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  ke = function (i) {\n    var t = i.data,\n      n = i.indexBy,\n      r = i.keys,\n      l = i.margin,\n      o = i.width,\n      u = i.height,\n      c = i.groupMode,\n      s = i.layout,\n      h = i.reverse,\n      b = i.minValue,\n      g = i.maxValue,\n      v = i.valueScale,\n      f = i.indexScale,\n      m = i.padding,\n      L = i.innerPadding,\n      w = i.axisTop,\n      C = i.axisRight,\n      M = i.axisBottom,\n      B = void 0 === M ? ee.axisBottom : M,\n      T = i.axisLeft,\n      R = void 0 === T ? ee.axisLeft : T,\n      H = i.enableGridX,\n      P = void 0 === H ? ee.enableGridX : H,\n      E = i.enableGridY,\n      X = void 0 === E ? ee.enableGridY : E,\n      Y = i.gridXValues,\n      D = i.gridYValues,\n      O = i.layers,\n      G = void 0 === O ? ee.layers : O,\n      A = i.barComponent,\n      j = void 0 === A ? ee.barComponent : A,\n      q = i.enableLabel,\n      K = void 0 === q ? ee.enableLabel : q,\n      N = i.label,\n      U = i.labelSkipWidth,\n      Z = void 0 === U ? ee.labelSkipWidth : U,\n      $ = i.labelSkipHeight,\n      _ = void 0 === $ ? ee.labelSkipHeight : $,\n      ae = i.labelTextColor,\n      ie = i.markers,\n      te = void 0 === ie ? ee.markers : ie,\n      ne = i.colorBy,\n      re = i.colors,\n      le = i.defs,\n      oe = void 0 === le ? ee.defs : le,\n      de = i.fill,\n      ue = void 0 === de ? ee.fill : de,\n      ce = i.borderRadius,\n      se = void 0 === ce ? ee.borderRadius : ce,\n      he = i.borderWidth,\n      be = void 0 === he ? ee.borderWidth : he,\n      ge = i.borderColor,\n      ve = i.annotations,\n      fe = void 0 === ve ? ee.annotations : ve,\n      me = i.legendLabel,\n      pe = i.tooltipLabel,\n      xe = i.valueFormat,\n      Se = i.isInteractive,\n      ke = void 0 === Se ? ee.isInteractive : Se,\n      Le = i.tooltip,\n      we = void 0 === Le ? ee.tooltip : Le,\n      Ce = i.onClick,\n      Ve = i.onMouseEnter,\n      We = i.onMouseLeave,\n      Me = i.legends,\n      Be = i.role,\n      Ie = void 0 === Be ? ee.role : Be,\n      Te = i.ariaLabel,\n      Re = i.ariaLabelledBy,\n      He = i.ariaDescribedBy,\n      Pe = i.isFocusable,\n      Ee = void 0 === Pe ? ee.isFocusable : Pe,\n      Fe = i.barAriaLabel,\n      Xe = i.barAriaLabelledBy,\n      Ye = i.barAriaDescribedBy,\n      De = i.initialHiddenIds,\n      Oe = p(),\n      Ge = Oe.animate,\n      Ae = Oe.config,\n      je = x(o, u, l),\n      qe = je.outerWidth,\n      ze = je.outerHeight,\n      Ke = je.margin,\n      Ne = je.innerWidth,\n      Je = je.innerHeight,\n      Qe = ye({\n        indexBy: n,\n        label: N,\n        tooltipLabel: pe,\n        valueFormat: xe,\n        colors: re,\n        colorBy: ne,\n        borderColor: ge,\n        labelTextColor: ae,\n        groupMode: c,\n        layout: s,\n        reverse: h,\n        data: t,\n        keys: r,\n        minValue: b,\n        maxValue: g,\n        margin: Ke,\n        width: Ne,\n        height: Je,\n        padding: m,\n        innerPadding: L,\n        valueScale: v,\n        indexScale: f,\n        enableLabel: K,\n        labelSkipWidth: Z,\n        labelSkipHeight: _,\n        legends: Me,\n        legendLabel: me,\n        initialHiddenIds: De\n      }),\n      Ue = Qe.bars,\n      Ze = Qe.barsWithValue,\n      $e = Qe.xScale,\n      _e = Qe.yScale,\n      ea = Qe.getLabel,\n      aa = Qe.getTooltipLabel,\n      ia = Qe.getBorderColor,\n      ta = Qe.getLabelColor,\n      na = Qe.shouldRenderBarLabel,\n      ra = Qe.toggleSerie,\n      la = Qe.legendsWithData,\n      oa = F(Ze, {\n        keys: function (e) {\n          return e.key;\n        },\n        from: function (e) {\n          return z({\n            borderColor: ia(e),\n            color: e.color,\n            height: 0,\n            labelColor: ta(e),\n            labelOpacity: 0,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === s ? {} : {\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          });\n        },\n        enter: function (e) {\n          return {\n            borderColor: ia(e),\n            color: e.color,\n            height: e.height,\n            labelColor: ta(e),\n            labelOpacity: 1,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          };\n        },\n        update: function (e) {\n          return {\n            borderColor: ia(e),\n            color: e.color,\n            height: e.height,\n            labelColor: ta(e),\n            labelOpacity: 1,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          };\n        },\n        leave: function (e) {\n          return z({\n            borderColor: ia(e),\n            color: e.color,\n            height: 0,\n            labelColor: ta(e),\n            labelOpacity: 0,\n            labelX: e.width / 2,\n            labelY: 0,\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === s ? {} : {\n            labelX: 0,\n            labelY: e.height / 2,\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          });\n        },\n        config: Ae,\n        immediate: !Ge\n      }),\n      da = V(function () {\n        return {\n          borderRadius: se,\n          borderWidth: be,\n          enableLabel: K,\n          isInteractive: ke,\n          labelSkipWidth: Z,\n          labelSkipHeight: _,\n          onClick: Ce,\n          onMouseEnter: Ve,\n          onMouseLeave: We,\n          getTooltipLabel: aa,\n          tooltip: we,\n          isFocusable: Ee,\n          ariaLabel: Fe,\n          ariaLabelledBy: Xe,\n          ariaDescribedBy: Ye\n        };\n      }, [se, be, K, aa, ke, _, Z, Ce, Ve, We, we, Ee, Fe, Xe, Ye]),\n      ua = y(oe, Ue, ue, {\n        dataKey: \"data\",\n        targetKey: \"data.fill\"\n      }),\n      ca = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null\n      };\n    G.includes(\"annotations\") && (ca.annotations = d(J, {\n      bars: Ue,\n      annotations: fe\n    }, \"annotations\")), G.includes(\"axes\") && (ca.axes = d(e, {\n      xScale: $e,\n      yScale: _e,\n      width: Ne,\n      height: Je,\n      top: w,\n      right: C,\n      bottom: B,\n      left: R\n    }, \"axes\")), G.includes(\"bars\") && (ca.bars = d(I, {\n      children: oa(function (e, a) {\n        return W(j, z({}, da, {\n          bar: a,\n          style: e,\n          shouldRenderLabel: na(a),\n          label: ea(a.data)\n        }));\n      })\n    }, \"bars\")), G.includes(\"grid\") && (ca.grid = d(a, {\n      width: Ne,\n      height: Je,\n      xScale: P ? $e : null,\n      yScale: X ? _e : null,\n      xValues: Y,\n      yValues: D\n    }, \"grid\")), G.includes(\"legends\") && (ca.legends = d(Q, {\n      width: Ne,\n      height: Je,\n      legends: la,\n      toggleSerie: ra\n    }, \"legends\")), G.includes(\"markers\") && (ca.markers = d(S, {\n      markers: te,\n      width: Ne,\n      height: Je,\n      xScale: $e,\n      yScale: _e\n    }, \"markers\"));\n    var sa = V(function () {\n      return z({}, da, {\n        margin: Ke,\n        width: o,\n        height: u,\n        innerWidth: Ne,\n        innerHeight: Je,\n        bars: Ue,\n        legendData: la,\n        enableLabel: K,\n        xScale: $e,\n        yScale: _e,\n        tooltip: we,\n        getTooltipLabel: aa,\n        onClick: Ce,\n        onMouseEnter: Ve,\n        onMouseLeave: We\n      });\n    }, [da, Ke, o, u, Ne, Je, Ue, la, K, $e, _e, we, aa, Ce, Ve, We]);\n    return d(k, {\n      width: qe,\n      height: ze,\n      margin: Ke,\n      defs: ua,\n      role: Ie,\n      ariaLabel: Te,\n      ariaLabelledBy: Re,\n      ariaDescribedBy: He,\n      isFocusable: Ee,\n      children: G.map(function (e, a) {\n        var i;\n        return \"function\" == typeof e ? d(I, {\n          children: W(e, sa)\n        }, a) : null != (i = null == ca ? void 0 : ca[e]) ? i : null;\n      })\n    });\n  },\n  Le = function (e) {\n    var a = e.isInteractive,\n      i = void 0 === a ? ee.isInteractive : a,\n      t = e.animate,\n      n = void 0 === t ? ee.animate : t,\n      r = e.motionConfig,\n      l = void 0 === r ? ee.motionConfig : r,\n      o = e.theme,\n      u = e.renderWrapper,\n      c = K(e, Se);\n    return d(m, {\n      animate: n,\n      isInteractive: i,\n      motionConfig: l,\n      renderWrapper: u,\n      theme: o,\n      children: d(ke, z({\n        isInteractive: i\n      }, c))\n    });\n  },\n  we = [\"isInteractive\", \"renderWrapper\", \"theme\"],\n  Ce = function (e, a, i, t) {\n    return e.find(function (e) {\n      return w(e.x + a.left, e.y + a.top, e.width, e.height, i, t);\n    });\n  },\n  Ve = function (e) {\n    var a = e.data,\n      r = e.indexBy,\n      u = e.keys,\n      c = e.margin,\n      s = e.width,\n      g = e.height,\n      v = e.groupMode,\n      f = e.layout,\n      m = e.reverse,\n      p = e.minValue,\n      y = e.maxValue,\n      S = e.valueScale,\n      k = e.indexScale,\n      w = e.padding,\n      C = e.innerPadding,\n      B = e.axisTop,\n      I = e.axisRight,\n      T = e.axisBottom,\n      P = void 0 === T ? ae.axisBottom : T,\n      E = e.axisLeft,\n      F = void 0 === E ? ae.axisLeft : E,\n      Y = e.enableGridX,\n      D = void 0 === Y ? ae.enableGridX : Y,\n      O = e.enableGridY,\n      G = void 0 === O ? ae.enableGridY : O,\n      A = e.gridXValues,\n      j = e.gridYValues,\n      q = e.layers,\n      K = void 0 === q ? ae.layers : q,\n      N = e.renderBar,\n      J = void 0 === N ? function (e, a) {\n        var i = a.bar,\n          t = i.color,\n          n = i.height,\n          r = i.width,\n          l = i.x,\n          o = i.y,\n          d = a.borderColor,\n          u = a.borderRadius,\n          c = a.borderWidth,\n          s = a.label,\n          h = a.labelColor,\n          b = a.shouldRenderLabel;\n        if (e.fillStyle = t, c > 0 && (e.strokeStyle = d, e.lineWidth = c), e.beginPath(), u > 0) {\n          var g = Math.min(u, n);\n          e.moveTo(l + g, o), e.lineTo(l + r - g, o), e.quadraticCurveTo(l + r, o, l + r, o + g), e.lineTo(l + r, o + n - g), e.quadraticCurveTo(l + r, o + n, l + r - g, o + n), e.lineTo(l + g, o + n), e.quadraticCurveTo(l, o + n, l, o + n - g), e.lineTo(l, o + g), e.quadraticCurveTo(l, o, l + g, o), e.closePath();\n        } else e.rect(l, o, r, n);\n        e.fill(), c > 0 && e.stroke(), b && (e.textBaseline = \"middle\", e.textAlign = \"center\", e.fillStyle = h, e.fillText(s, l + r / 2, o + n / 2));\n      } : N,\n      Q = e.enableLabel,\n      U = void 0 === Q ? ae.enableLabel : Q,\n      Z = e.label,\n      $ = e.labelSkipWidth,\n      _ = void 0 === $ ? ae.labelSkipWidth : $,\n      ee = e.labelSkipHeight,\n      ie = void 0 === ee ? ae.labelSkipHeight : ee,\n      te = e.labelTextColor,\n      ne = e.colorBy,\n      re = e.colors,\n      le = e.borderRadius,\n      oe = void 0 === le ? ae.borderRadius : le,\n      de = e.borderWidth,\n      ue = void 0 === de ? ae.borderWidth : de,\n      ce = e.borderColor,\n      se = e.annotations,\n      he = void 0 === se ? ae.annotations : se,\n      be = e.legendLabel,\n      ge = e.tooltipLabel,\n      ve = e.valueFormat,\n      fe = e.isInteractive,\n      me = void 0 === fe ? ae.isInteractive : fe,\n      pe = e.tooltip,\n      xe = void 0 === pe ? ae.tooltip : pe,\n      Se = e.onClick,\n      ke = e.onMouseEnter,\n      Le = e.onMouseLeave,\n      we = e.legends,\n      Ve = e.pixelRatio,\n      We = void 0 === Ve ? ae.pixelRatio : Ve,\n      Me = e.canvasRef,\n      Be = R(null),\n      Ie = b(),\n      Te = x(s, g, c),\n      Re = Te.margin,\n      He = Te.innerWidth,\n      Pe = Te.innerHeight,\n      Ee = Te.outerWidth,\n      Fe = Te.outerHeight,\n      Xe = ye({\n        indexBy: r,\n        label: Z,\n        tooltipLabel: ge,\n        valueFormat: ve,\n        colors: re,\n        colorBy: ne,\n        borderColor: ce,\n        labelTextColor: te,\n        groupMode: v,\n        layout: f,\n        reverse: m,\n        data: a,\n        keys: u,\n        minValue: p,\n        maxValue: y,\n        margin: Re,\n        width: He,\n        height: Pe,\n        padding: w,\n        innerPadding: C,\n        valueScale: S,\n        indexScale: k,\n        enableLabel: U,\n        labelSkipWidth: _,\n        labelSkipHeight: ie,\n        legends: we,\n        legendLabel: be\n      }),\n      Ye = Xe.bars,\n      De = Xe.barsWithValue,\n      Oe = Xe.xScale,\n      Ge = Xe.yScale,\n      Ae = Xe.getLabel,\n      je = Xe.getTooltipLabel,\n      qe = Xe.getBorderColor,\n      ze = Xe.getLabelColor,\n      Ke = Xe.shouldRenderBarLabel,\n      Ne = Xe.legendsWithData,\n      Je = X(),\n      Qe = Je.showTooltipFromEvent,\n      Ue = Je.hideTooltip,\n      Ze = l({\n        annotations: n({\n          data: Ye,\n          annotations: he,\n          getPosition: function (e) {\n            return {\n              x: e.x,\n              y: e.y\n            };\n          },\n          getDimensions: function (e) {\n            var a = e.width,\n              i = e.height;\n            return {\n              width: a,\n              height: i,\n              size: Math.max(a, i)\n            };\n          }\n        })\n      }),\n      $e = V(function () {\n        return {\n          borderRadius: oe,\n          borderWidth: ue,\n          isInteractive: me,\n          isFocusable: !1,\n          labelSkipWidth: _,\n          labelSkipHeight: ie,\n          margin: Re,\n          width: s,\n          height: g,\n          innerWidth: He,\n          innerHeight: Pe,\n          bars: Ye,\n          legendData: Ne,\n          enableLabel: U,\n          xScale: Oe,\n          yScale: Ge,\n          tooltip: xe,\n          getTooltipLabel: je,\n          onClick: Se,\n          onMouseEnter: ke,\n          onMouseLeave: Le\n        };\n      }, [oe, ue, me, _, ie, Re, s, g, He, Pe, Ye, Ne, U, Oe, Ge, xe, je, Se, ke, Le]);\n    H(function () {\n      var e,\n        a = null == (e = Be.current) ? void 0 : e.getContext(\"2d\");\n      Be.current && a && (Be.current.width = Ee * We, Be.current.height = Fe * We, a.scale(We, We), a.fillStyle = Ie.background, a.fillRect(0, 0, Ee, Fe), a.translate(Re.left, Re.top), K.forEach(function (e) {\n        \"grid\" === e ? \"number\" == typeof Ie.grid.line.strokeWidth && Ie.grid.line.strokeWidth > 0 && (a.lineWidth = Ie.grid.line.strokeWidth, a.strokeStyle = Ie.grid.line.stroke, D && i(a, {\n          width: s,\n          height: g,\n          scale: Oe,\n          axis: \"x\",\n          values: A\n        }), G && i(a, {\n          width: s,\n          height: g,\n          scale: Ge,\n          axis: \"y\",\n          values: j\n        })) : \"axes\" === e ? t(a, {\n          xScale: Oe,\n          yScale: Ge,\n          width: He,\n          height: Pe,\n          top: B,\n          right: I,\n          bottom: P,\n          left: F,\n          theme: Ie\n        }) : \"bars\" === e ? De.forEach(function (e) {\n          J(a, {\n            bar: e,\n            borderColor: qe(e),\n            borderRadius: oe,\n            borderWidth: ue,\n            label: Ae(e.data),\n            labelColor: ze(e),\n            shouldRenderLabel: Ke(e)\n          });\n        }) : \"legends\" === e ? Ne.forEach(function (e) {\n          var i = e[0],\n            t = e[1];\n          h(a, z({}, i, {\n            data: t,\n            containerWidth: He,\n            containerHeight: Pe,\n            theme: Ie\n          }));\n        }) : \"annotations\" === e ? o(a, {\n          annotations: Ze,\n          theme: Ie\n        }) : \"function\" == typeof e && e(a, $e);\n      }), a.save());\n    }, [P, F, I, B, De, oe, ue, Ze, D, G, qe, Ae, ze, A, j, v, g, Pe, He, $e, K, f, Ne, Re.left, Re.top, Fe, Ee, We, J, Oe, Ge, m, Ke, Ie, s]);\n    var _e = M(function (e) {\n        if (Ye && Be.current) {\n          var a = L(Be.current, e),\n            i = a[0],\n            t = a[1],\n            n = Ce(Ye, Re, i, t);\n          void 0 !== n ? (Qe(W(xe, z({}, n.data, {\n            color: n.color,\n            label: n.label,\n            value: Number(n.data.value)\n          })), e), \"mouseenter\" === e.type && (null == ke || ke(n.data, e))) : Ue();\n        }\n      }, [Ue, Re, ke, Ye, Qe, xe]),\n      ea = M(function (e) {\n        if (Ye && Be.current) {\n          Ue();\n          var a = L(Be.current, e),\n            i = a[0],\n            t = a[1],\n            n = Ce(Ye, Re, i, t);\n          n && (null == Le || Le(n.data, e));\n        }\n      }, [Ue, Re, Le, Ye]),\n      aa = M(function (e) {\n        if (Ye && Be.current) {\n          var a = L(Be.current, e),\n            i = a[0],\n            t = a[1],\n            n = Ce(Ye, Re, i, t);\n          void 0 !== n && (null == Se || Se(z({}, n.data, {\n            color: n.color\n          }), e));\n        }\n      }, [Re, Se, Ye]);\n    return d(\"canvas\", {\n      ref: function (e) {\n        Be.current = e, Me && \"current\" in Me && (Me.current = e);\n      },\n      width: Ee * We,\n      height: Fe * We,\n      style: {\n        width: Ee,\n        height: Fe,\n        cursor: me ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: me ? _e : void 0,\n      onMouseMove: me ? _e : void 0,\n      onMouseLeave: me ? ea : void 0,\n      onClick: me ? aa : void 0\n    });\n  },\n  We = T(function (e, a) {\n    var i = e.isInteractive,\n      t = e.renderWrapper,\n      n = e.theme,\n      r = K(e, we);\n    return d(m, {\n      isInteractive: i,\n      renderWrapper: t,\n      theme: n,\n      animate: !1,\n      children: d(Ve, z({}, r, {\n        canvasRef: a\n      }))\n    });\n  }),\n  Me = function (e) {\n    return d(C, {\n      children: function (a) {\n        var i = a.width,\n          t = a.height;\n        return d(Le, z({\n          width: i,\n          height: t\n        }, e));\n      }\n    });\n  },\n  Be = T(function (e, a) {\n    return d(C, {\n      children: function (i) {\n        var t = i.width,\n          n = i.height;\n        return d(We, z({\n          width: t,\n          height: n\n        }, e, {\n          ref: a\n        }));\n      }\n    });\n  });\nexport { Le as Bar, We as BarCanvas, Z as BarItem, Me as ResponsiveBar, Be as ResponsiveBarCanvas, ae as canvasDefaultProps, _ as defaultProps, ee as svgDefaultProps };","map":{"version":3,"names":["N","J","BarAnnotations","e","a","bars","i","annotations","t","n","data","getPosition","x","width","y","height","getDimensions","size","Math","max","d","u","children","map","r","z","Q","BarLegends","legends","toggleSerie","l","o","s","containerWidth","containerHeight","dataFrom","U","Z","BarItem","bar","K","style","borderColor","color","labelColor","h","labelOpacity","g","labelX","v","labelY","f","transform","m","p","borderRadius","borderWidth","label","S","shouldRenderLabel","k","isInteractive","L","onClick","w","onMouseEnter","C","onMouseLeave","B","tooltip","I","isFocusable","T","ariaLabel","R","ariaLabelledBy","H","ariaDescribedBy","F","b","Y","X","D","showTooltipFromEvent","O","showTooltipAt","G","hideTooltip","A","V","W","j","M","q","absX","absY","c","P","rect","E","rx","ry","fill","strokeWidth","stroke","focusable","tabIndex","onMouseMove","onFocus","onBlur","text","textAnchor","dominantBaseline","fillOpacity","labels","pointerEvents","$","_","indexBy","keys","groupMode","layout","reverse","minValue","maxValue","valueScale","type","indexScale","round","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","from","theme","colorBy","colors","scheme","id","value","formattedValue","enableChip","tooltipLabel","indexValue","initialHiddenIds","markers","ee","layers","barComponent","defs","animate","motionConfig","role","ae","pixelRatio","window","devicePixelRatio","ie","getIndexScale","all","min","te","normalizeData","reduce","ne","filterNullValues","Object","re","coerceValue","Number","le","oe","gt","de","lt","ue","range","Array","repeat","ce","clampToZero","se","generateVerticalGroupedBars","formatValue","getColor","getIndex","getTooltipLabel","xScale","yScale","margin","forEach","domain","length","hidden","index","push","key","left","top","he","generateHorizontalGroupedBars","be","generateGroupedBars","hiddenIds","filter","includes","concat","Boolean","apply","isFinite","bandwidth","ge","ve","some","isArray","fe","generateVerticalStackedBars","stackedData","me","generateHorizontalStackedBars","pe","generateStackedBars","offset","xe","getLegendData","direction","legendLabel","ye","useBar","valueFormat","indexOf","Se","ke","Le","we","Ce","Ve","We","Me","find","Be","barsWithValue","getLabel","getBorderColor","getLabelColor","shouldRenderBarLabel","legendsWithData","InnerBar","axisTop","axisRight","gridXValues","gridYValues","Ie","Te","Re","He","Pe","Ee","Fe","barAriaLabel","Xe","barAriaLabelledBy","Ye","barAriaDescribedBy","De","Oe","Ge","Ae","config","je","qe","outerWidth","ze","outerHeight","Ke","Ne","innerWidth","Je","innerHeight","Qe","Ue","Ze","$e","_e","ea","aa","ia","ta","na","ra","la","oa","enter","update","leave","immediate","da","ua","dataKey","targetKey","ca","axes","grid","right","bottom","xValues","yValues","sa","legendData","Bar","renderWrapper","findBarUnderCursor","InnerBarCanvas","renderBar","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","textBaseline","textAlign","fillText","canvasRef","current","getContext","scale","background","fillRect","translate","line","axis","values","save","ref","cursor","ResponsiveBar","ResponsiveWrapper","BarCanvas","ResponsiveBarCanvas","canvasDefaultProps","defaultProps","svgDefaultProps"],"sources":["/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/BarAnnotations.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/BarLegends.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/BarItem.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/props.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/BarTooltip.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/compute/common.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/compute/grouped.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/compute/stacked.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/compute/legends.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/hooks.ts","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/Bar.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/BarCanvas.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/ResponsiveBar.tsx","/Users/mtc/Yara/task2/react-admin/node_modules/@nivo/bar/src/ResponsiveBarCanvas.tsx"],"sourcesContent":["import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'markers', 'legends', 'annotations'],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'legends', 'annotations'],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n    }\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport {\n    BarCustomLayerProps,\n    BarDatum,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { svgDefaultProps } from './props'\nimport { useTransition } from '@react-spring/web'\nimport { useBar } from './hooks'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarDatum,\n    ComputedBarDatum,\n} from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas\n                    width={width}\n                    height={height}\n                    {...(props as Omit<BarCanvasProps<BarDatum>, 'height' | 'width'>)}\n                    ref={ref}\n                />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}